{"ast":null,"code":"import { isValidElement, useMemo, createElement } from 'react';\nimport _omit from 'lodash/omit';\nimport _isNumber from 'lodash/isNumber';\nimport _filter from 'lodash/filter';\nimport { absoluteAngleDegrees, radiansToDegrees, positionFromAngle, degreesToRadians, useTheme, useMotionConfig, useAnimatedPath } from '@nivo/core';\nimport { useSpring, animated } from '@react-spring/web';\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nvar defaultProps = {\n  dotSize: 4,\n  noteWidth: 120,\n  noteTextOffset: 8,\n  animate: true,\n  motionStiffness: 90,\n  motionDamping: 13\n};\n\nvar isSvgNote = function isSvgNote(note) {\n  var noteType = typeof note;\n  return isValidElement(note) || noteType === 'string' || noteType === 'function' || noteType === 'object';\n};\n\nvar isCanvasNote = function isCanvasNote(note) {\n  var noteType = typeof note;\n  return noteType === 'string' || noteType === 'function';\n};\n\nvar isCircleAnnotation = function isCircleAnnotation(annotationSpec) {\n  return annotationSpec.type === 'circle';\n};\n\nvar isDotAnnotation = function isDotAnnotation(annotationSpec) {\n  return annotationSpec.type === 'dot';\n};\n\nvar isRectAnnotation = function isRectAnnotation(annotationSpec) {\n  return annotationSpec.type === 'rect';\n};\n\nvar bindAnnotations = function bindAnnotations(_ref) {\n  var data = _ref.data,\n      annotations = _ref.annotations,\n      getPosition = _ref.getPosition,\n      getDimensions = _ref.getDimensions;\n  return annotations.reduce(function (acc, annotation) {\n    var offset = annotation.offset || 0;\n    return [].concat(_toConsumableArray(acc), _toConsumableArray(_filter(data, annotation.match).map(function (datum) {\n      var position = getPosition(datum);\n      var dimensions = getDimensions(datum);\n\n      if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n        dimensions.size = dimensions.size + offset * 2;\n        dimensions.width = dimensions.width + offset * 2;\n        dimensions.height = dimensions.height + offset * 2;\n      }\n\n      return _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, _omit(annotation, ['match', 'offset'])), position), dimensions), {}, {\n        size: annotation.size || dimensions.size,\n        datum: datum\n      });\n    })));\n  }, []);\n};\n\nvar getLinkAngle = function getLinkAngle(sourceX, sourceY, targetX, targetY) {\n  var angle = Math.atan2(targetY - sourceY, targetX - sourceX);\n  return absoluteAngleDegrees(radiansToDegrees(angle));\n};\n\nvar computeAnnotation = function computeAnnotation(annotation) {\n  var x = annotation.x,\n      y = annotation.y,\n      noteX = annotation.noteX,\n      noteY = annotation.noteY,\n      _annotation$noteWidth = annotation.noteWidth,\n      noteWidth = _annotation$noteWidth === void 0 ? defaultProps.noteWidth : _annotation$noteWidth,\n      _annotation$noteTextO = annotation.noteTextOffset,\n      noteTextOffset = _annotation$noteTextO === void 0 ? defaultProps.noteTextOffset : _annotation$noteTextO;\n  var computedNoteX;\n  var computedNoteY;\n\n  if (_isNumber(noteX)) {\n    computedNoteX = x + noteX;\n  } else if (noteX.abs !== undefined) {\n    computedNoteX = noteX.abs;\n  } else {\n    throw new Error(\"noteX should be either a number or an object containing an 'abs' property\");\n  }\n\n  if (_isNumber(noteY)) {\n    computedNoteY = y + noteY;\n  } else if (noteY.abs !== undefined) {\n    computedNoteY = noteY.abs;\n  } else {\n    throw new Error(\"noteY should be either a number or an object containing an 'abs' property\");\n  }\n\n  var computedX = x;\n  var computedY = y;\n  var angle = getLinkAngle(x, y, computedNoteX, computedNoteY);\n\n  if (isCircleAnnotation(annotation)) {\n    var position = positionFromAngle(degreesToRadians(angle), annotation.size / 2);\n    computedX += position.x;\n    computedY += position.y;\n  }\n\n  if (isRectAnnotation(annotation)) {\n    var eighth = Math.round((angle + 90) / 45) % 8;\n\n    if (eighth === 0) {\n      computedY -= annotation.height / 2;\n    }\n\n    if (eighth === 1) {\n      computedX += annotation.width / 2;\n      computedY -= annotation.height / 2;\n    }\n\n    if (eighth === 2) {\n      computedX += annotation.width / 2;\n    }\n\n    if (eighth === 3) {\n      computedX += annotation.width / 2;\n      computedY += annotation.height / 2;\n    }\n\n    if (eighth === 4) {\n      computedY += annotation.height / 2;\n    }\n\n    if (eighth === 5) {\n      computedX -= annotation.width / 2;\n      computedY += annotation.height / 2;\n    }\n\n    if (eighth === 6) {\n      computedX -= annotation.width / 2;\n    }\n\n    if (eighth === 7) {\n      computedX -= annotation.width / 2;\n      computedY -= annotation.height / 2;\n    }\n  }\n\n  var textX = computedNoteX;\n  var textY = computedNoteY - noteTextOffset;\n  var noteLineX = computedNoteX;\n  var noteLineY = computedNoteY;\n\n  if ((angle + 90) % 360 > 180) {\n    textX -= noteWidth;\n    noteLineX -= noteWidth;\n  } else {\n    noteLineX += noteWidth;\n  }\n\n  return {\n    points: [[computedX, computedY], [computedNoteX, computedNoteY], [noteLineX, noteLineY]],\n    text: [textX, textY],\n    angle: angle + 90\n  };\n};\n\nvar useAnnotations = function useAnnotations(_ref) {\n  var data = _ref.data,\n      annotations = _ref.annotations,\n      getPosition = _ref.getPosition,\n      getDimensions = _ref.getDimensions;\n  return useMemo(function () {\n    return bindAnnotations({\n      data: data,\n      annotations: annotations,\n      getPosition: getPosition,\n      getDimensions: getDimensions\n    });\n  }, [data, annotations, getPosition, getDimensions]);\n};\n\nvar useComputedAnnotations = function useComputedAnnotations(_ref2) {\n  var annotations = _ref2.annotations;\n  return useMemo(function () {\n    return annotations.map(function (annotation) {\n      return _objectSpread2(_objectSpread2({}, annotation), {}, {\n        computed: computeAnnotation(_objectSpread2({}, annotation))\n      });\n    });\n  }, [annotations]);\n};\n\nvar useComputedAnnotation = function useComputedAnnotation(annotation) {\n  return useMemo(function () {\n    return computeAnnotation(annotation);\n  }, [annotation]);\n};\n\nvar AnnotationNote = function AnnotationNote(_ref) {\n  var datum = _ref.datum,\n      x = _ref.x,\n      y = _ref.y,\n      note = _ref.note;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x,\n    y: y,\n    config: springConfig,\n    immediate: !animate\n  });\n\n  if (typeof note === 'function') {\n    return createElement(note, {\n      x: x,\n      y: y,\n      datum: datum\n    });\n  }\n\n  return jsxs(Fragment, {\n    children: [theme.annotations.text.outlineWidth > 0 && jsx(animated.text, {\n      x: animatedProps.x,\n      y: animatedProps.y,\n      style: _objectSpread2(_objectSpread2({}, theme.annotations.text), {}, {\n        strokeLinejoin: 'round',\n        strokeWidth: theme.annotations.text.outlineWidth * 2,\n        stroke: theme.annotations.text.outlineColor\n      }),\n      children: note\n    }), jsx(animated.text, {\n      x: animatedProps.x,\n      y: animatedProps.y,\n      style: _omit(theme.annotations.text, ['outlineWidth', 'outlineColor']),\n      children: note\n    })]\n  });\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nvar AnnotationLink = function AnnotationLink(_ref) {\n  var points = _ref.points,\n      _ref$isOutline = _ref.isOutline,\n      isOutline = _ref$isOutline === void 0 ? false : _ref$isOutline;\n  var theme = useTheme();\n  var path = useMemo(function () {\n    var _points = _toArray(points),\n        firstPoint = _points[0],\n        otherPoints = _points.slice(1);\n\n    return otherPoints.reduce(function (acc, _ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          x = _ref3[0],\n          y = _ref3[1];\n\n      return \"\".concat(acc, \" L\").concat(x, \",\").concat(y);\n    }, \"M\".concat(firstPoint[0], \",\").concat(firstPoint[1]));\n  }, [points]);\n  var animatedPath = useAnimatedPath(path);\n\n  if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n    return null;\n  }\n\n  var style = _objectSpread2({}, theme.annotations.link);\n\n  if (isOutline) {\n    style.strokeLinecap = 'square';\n    style.strokeWidth = theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2;\n    style.stroke = theme.annotations.link.outlineColor;\n  }\n\n  return jsx(animated.path, {\n    fill: \"none\",\n    d: animatedPath,\n    style: style\n  });\n};\n\nvar CircleAnnotationOutline = function CircleAnnotationOutline(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      size = _ref.size;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x,\n    y: y,\n    radius: size / 2,\n    config: springConfig,\n    immediate: !animate\n  });\n  return jsxs(Fragment, {\n    children: [theme.annotations.outline.outlineWidth > 0 && jsx(animated.circle, {\n      cx: animatedProps.x,\n      cy: animatedProps.y,\n      r: animatedProps.radius,\n      style: _objectSpread2(_objectSpread2({}, theme.annotations.outline), {}, {\n        fill: 'none',\n        strokeWidth: theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2,\n        stroke: theme.annotations.outline.outlineColor\n      })\n    }), jsx(animated.circle, {\n      cx: animatedProps.x,\n      cy: animatedProps.y,\n      r: animatedProps.radius,\n      style: theme.annotations.outline\n    })]\n  });\n};\n\nvar DotAnnotationOutline = function DotAnnotationOutline(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? defaultProps.dotSize : _ref$size;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x,\n    y: y,\n    radius: size / 2,\n    config: springConfig,\n    immediate: !animate\n  });\n  return jsxs(Fragment, {\n    children: [theme.annotations.outline.outlineWidth > 0 && jsx(animated.circle, {\n      cx: animatedProps.x,\n      cy: animatedProps.y,\n      r: animatedProps.radius,\n      style: _objectSpread2(_objectSpread2({}, theme.annotations.outline), {}, {\n        fill: 'none',\n        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n        stroke: theme.annotations.outline.outlineColor\n      })\n    }), jsx(animated.circle, {\n      cx: animatedProps.x,\n      cy: animatedProps.y,\n      r: animatedProps.radius,\n      style: theme.annotations.symbol\n    })]\n  });\n};\n\nvar RectAnnotationOutline = function RectAnnotationOutline(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x - width / 2,\n    y: y - height / 2,\n    width: width,\n    height: height,\n    config: springConfig,\n    immediate: !animate\n  });\n  return jsxs(Fragment, {\n    children: [theme.annotations.outline.outlineWidth > 0 && jsx(animated.rect, {\n      x: animatedProps.x,\n      y: animatedProps.y,\n      width: animatedProps.width,\n      height: animatedProps.height,\n      style: _objectSpread2(_objectSpread2({}, theme.annotations.outline), {}, {\n        fill: 'none',\n        strokeWidth: theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2,\n        stroke: theme.annotations.outline.outlineColor\n      })\n    }), jsx(animated.rect, {\n      x: animatedProps.x,\n      y: animatedProps.y,\n      width: animatedProps.width,\n      height: animatedProps.height,\n      style: theme.annotations.outline\n    })]\n  });\n};\n\nvar Annotation = function Annotation(annotation) {\n  var datum = annotation.datum,\n      x = annotation.x,\n      y = annotation.y,\n      note = annotation.note;\n  var computed = useComputedAnnotation(annotation);\n\n  if (!isSvgNote(note)) {\n    throw new Error('note should be a valid react element');\n  }\n\n  return jsxs(Fragment, {\n    children: [jsx(AnnotationLink, {\n      points: computed.points,\n      isOutline: true\n    }), isCircleAnnotation(annotation) && jsx(CircleAnnotationOutline, {\n      x: x,\n      y: y,\n      size: annotation.size\n    }), isDotAnnotation(annotation) && jsx(DotAnnotationOutline, {\n      x: x,\n      y: y,\n      size: annotation.size\n    }), isRectAnnotation(annotation) && jsx(RectAnnotationOutline, {\n      x: x,\n      y: y,\n      width: annotation.width,\n      height: annotation.height\n    }), jsx(AnnotationLink, {\n      points: computed.points\n    }), jsx(AnnotationNote, {\n      datum: datum,\n      x: computed.text[0],\n      y: computed.text[1],\n      note: note\n    })]\n  });\n};\n\nvar drawPoints = function drawPoints(ctx, points) {\n  points.forEach(function (_ref, index) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        x = _ref2[0],\n        y = _ref2[1];\n\n    if (index === 0) {\n      ctx.moveTo(x, y);\n    } else {\n      ctx.lineTo(x, y);\n    }\n  });\n};\n\nvar renderAnnotationsToCanvas = function renderAnnotationsToCanvas(ctx, _ref3) {\n  var annotations = _ref3.annotations,\n      theme = _ref3.theme;\n  if (annotations.length === 0) return;\n  ctx.save();\n  annotations.forEach(function (annotation) {\n    if (!isCanvasNote(annotation.note)) {\n      throw new Error('note is invalid for canvas implementation');\n    }\n\n    if (theme.annotations.link.outlineWidth > 0) {\n      ctx.lineCap = 'square';\n      ctx.strokeStyle = theme.annotations.link.outlineColor;\n      ctx.lineWidth = theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2;\n      ctx.beginPath();\n      drawPoints(ctx, annotation.computed.points);\n      ctx.stroke();\n      ctx.lineCap = 'butt';\n    }\n\n    if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n      ctx.strokeStyle = theme.annotations.outline.outlineColor;\n      ctx.lineWidth = theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2;\n      ctx.beginPath();\n      ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI);\n      ctx.stroke();\n    }\n\n    if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n      ctx.strokeStyle = theme.annotations.symbol.outlineColor;\n      ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2;\n      ctx.beginPath();\n      ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI);\n      ctx.stroke();\n    }\n\n    if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n      ctx.strokeStyle = theme.annotations.outline.outlineColor;\n      ctx.lineWidth = theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2;\n      ctx.beginPath();\n      ctx.rect(annotation.x - annotation.width / 2, annotation.y - annotation.height / 2, annotation.width, annotation.height);\n      ctx.stroke();\n    }\n\n    ctx.strokeStyle = theme.annotations.link.stroke;\n    ctx.lineWidth = theme.annotations.link.strokeWidth;\n    ctx.beginPath();\n    drawPoints(ctx, annotation.computed.points);\n    ctx.stroke();\n\n    if (isCircleAnnotation(annotation)) {\n      ctx.strokeStyle = theme.annotations.outline.stroke;\n      ctx.lineWidth = theme.annotations.outline.strokeWidth;\n      ctx.beginPath();\n      ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI);\n      ctx.stroke();\n    }\n\n    if (isDotAnnotation(annotation)) {\n      ctx.fillStyle = theme.annotations.symbol.fill;\n      ctx.beginPath();\n      ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n\n    if (isRectAnnotation(annotation)) {\n      ctx.strokeStyle = theme.annotations.outline.stroke;\n      ctx.lineWidth = theme.annotations.outline.strokeWidth;\n      ctx.beginPath();\n      ctx.rect(annotation.x - annotation.width / 2, annotation.y - annotation.height / 2, annotation.width, annotation.height);\n      ctx.stroke();\n    }\n\n    if (typeof annotation.note === 'function') {\n      annotation.note(ctx, {\n        datum: annotation.datum,\n        x: annotation.computed.text[0],\n        y: annotation.computed.text[1],\n        theme: theme\n      });\n    } else {\n      ctx.font = \"\".concat(theme.annotations.text.fontSize, \"px \").concat(theme.annotations.text.fontFamily);\n      ctx.fillStyle = theme.annotations.text.fill;\n      ctx.strokeStyle = theme.annotations.text.outlineColor;\n      ctx.lineWidth = theme.annotations.text.outlineWidth * 2;\n\n      if (theme.annotations.text.outlineWidth > 0) {\n        ctx.lineJoin = 'round';\n        ctx.strokeText(annotation.note, annotation.computed.text[0], annotation.computed.text[1]);\n        ctx.lineJoin = 'miter';\n      }\n\n      ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1]);\n    }\n  });\n  ctx.restore();\n};\n\nexport { Annotation, bindAnnotations, computeAnnotation, defaultProps, getLinkAngle, isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote, renderAnnotationsToCanvas, useAnnotations, useComputedAnnotation, useComputedAnnotations };","map":{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/props.ts","../src/utils.ts","../src/compute.ts","../src/hooks.ts","../src/AnnotationNote.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","../src/AnnotationLink.tsx","../src/CircleAnnotationOutline.tsx","../src/DotAnnotationOutline.tsx","../src/RectAnnotationOutline.tsx","../src/Annotation.tsx","../src/canvas.ts"],"names":["defineProperty","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","defaultProps","dotSize","noteWidth","noteTextOffset","animate","motionStiffness","motionDamping","isSvgNote","noteType","isValidElement","isCanvasNote","isCircleAnnotation","annotationSpec","isDotAnnotation","isRectAnnotation","bindAnnotations","data","annotations","getPosition","getDimensions","offset","annotation","position","dimensions","size","datum","getLinkAngle","angle","Math","targetY","targetX","absoluteAngleDegrees","radiansToDegrees","computeAnnotation","x","y","noteX","noteY","computedNoteX","computedNoteY","computedX","computedY","positionFromAngle","degreesToRadians","eighth","textX","textY","noteLineX","noteLineY","points","text","useAnnotations","useMemo","useComputedAnnotations","computed","useComputedAnnotation","AnnotationNote","note","theme","useTheme","springConfig","useMotionConfig","animatedProps","useSpring","config","immediate","createElement","strokeLinejoin","strokeWidth","stroke","outlineColor","omit","arrayWithHoles","iterableToArrayLimit","nonIterableRest","AnnotationLink","isOutline","path","firstPoint","otherPoints","animatedPath","useAnimatedPath","style","CircleAnnotationOutline","radius","fill","outline","DotAnnotationOutline","symbol","RectAnnotationOutline","width","height","Annotation","drawPoints","index","ctx","renderAnnotationsToCanvas"],"mappings":"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","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationSpec,\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: Required<AnnotationSpec<Datum>>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    AnnotationSpec,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: Required<AnnotationSpec<Datum>>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: Required<AnnotationSpec<Datum>>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n"]},"metadata":{},"sourceType":"module"}