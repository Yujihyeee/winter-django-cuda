{"ast":null,"code":"import { useMemo, Fragment, createElement, useRef, useState, useCallback } from 'react';\nimport { Container, useDimensions, SvgWrapper, ResponsiveWrapper, getRelativeCursor } from '@nivo/core';\nimport { scaleLinear } from 'd3-scale';\nimport { Delaunay } from 'd3-delaunay';\nimport { jsx, jsxs, Fragment as Fragment$1 } from 'react/jsx-runtime';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar defaultVoronoiProps = {\n  xDomain: [0, 1],\n  yDomain: [0, 1],\n  layers: ['links', 'cells', 'points', 'bounds'],\n  enableLinks: false,\n  linkLineWidth: 1,\n  linkLineColor: '#bbbbbb',\n  enableCells: true,\n  cellLineWidth: 2,\n  cellLineColor: '#000000',\n  enablePoints: true,\n  pointSize: 4,\n  pointColor: '#666666',\n  role: 'img'\n};\n\nvar getAccessor = function getAccessor(directive) {\n  return typeof directive === 'function' ? directive : function (datum) {\n    return datum[directive];\n  };\n};\n\nvar computeMeshPoints = function computeMeshPoints(_ref) {\n  var points = _ref.points,\n      _ref$x = _ref.x,\n      x = _ref$x === void 0 ? 'x' : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? 'y' : _ref$y;\n  var getX = getAccessor(x);\n  var getY = getAccessor(y);\n  return points.map(function (point) {\n    return [getX(point), getY(point)];\n  });\n};\n\nvar computeMesh = function computeMesh(_ref2) {\n  var points = _ref2.points,\n      width = _ref2.width,\n      height = _ref2.height,\n      debug = _ref2.debug;\n  var delaunay = Delaunay.from(points);\n  var voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined;\n  return {\n    delaunay: delaunay,\n    voronoi: voronoi\n  };\n};\n\nvar useVoronoiMesh = function useVoronoiMesh(_ref) {\n  var points = _ref.points,\n      x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      debug = _ref.debug;\n  var points2d = useMemo(function () {\n    return computeMeshPoints({\n      points: points,\n      x: x,\n      y: y\n    });\n  }, [points, x, y]);\n  return useMemo(function () {\n    return computeMesh({\n      points: points2d,\n      width: width,\n      height: height,\n      debug: debug\n    });\n  }, [points2d, width, height, debug]);\n};\n\nvar useVoronoi = function useVoronoi(_ref2) {\n  var data = _ref2.data,\n      width = _ref2.width,\n      height = _ref2.height,\n      xDomain = _ref2.xDomain,\n      yDomain = _ref2.yDomain;\n  var xScale = useMemo(function () {\n    return scaleLinear().domain(xDomain).range([0, width]);\n  }, [xDomain, width]);\n  var yScale = useMemo(function () {\n    return scaleLinear().domain(yDomain).range([0, height]);\n  }, [yDomain, height]);\n  var points = useMemo(function () {\n    return data.map(function (d) {\n      return {\n        x: xScale(d.x),\n        y: yScale(d.y),\n        data: d\n      };\n    });\n  }, [data, xScale, yScale]);\n  return useMemo(function () {\n    var delaunay = Delaunay.from(points.map(function (p) {\n      return [p.x, p.y];\n    }));\n    var voronoi = delaunay.voronoi([0, 0, width, height]);\n    return {\n      points: points,\n      delaunay: delaunay,\n      voronoi: voronoi\n    };\n  }, [points, width, height]);\n};\n\nvar useVoronoiLayerContext = function useVoronoiLayerContext(_ref3) {\n  var points = _ref3.points,\n      delaunay = _ref3.delaunay,\n      voronoi = _ref3.voronoi;\n  return useMemo(function () {\n    return {\n      points: points,\n      delaunay: delaunay,\n      voronoi: voronoi\n    };\n  }, [points, delaunay, voronoi]);\n};\n\nvar InnerVoronoi = function InnerVoronoi(_ref) {\n  var data = _ref.data,\n      width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      _ref$layers = _ref.layers,\n      layers = _ref$layers === void 0 ? defaultVoronoiProps.layers : _ref$layers,\n      _ref$xDomain = _ref.xDomain,\n      xDomain = _ref$xDomain === void 0 ? defaultVoronoiProps.xDomain : _ref$xDomain,\n      _ref$yDomain = _ref.yDomain,\n      yDomain = _ref$yDomain === void 0 ? defaultVoronoiProps.yDomain : _ref$yDomain,\n      _ref$enableLinks = _ref.enableLinks,\n      enableLinks = _ref$enableLinks === void 0 ? defaultVoronoiProps.enableLinks : _ref$enableLinks,\n      _ref$linkLineWidth = _ref.linkLineWidth,\n      linkLineWidth = _ref$linkLineWidth === void 0 ? defaultVoronoiProps.linkLineWidth : _ref$linkLineWidth,\n      _ref$linkLineColor = _ref.linkLineColor,\n      linkLineColor = _ref$linkLineColor === void 0 ? defaultVoronoiProps.linkLineColor : _ref$linkLineColor,\n      _ref$enableCells = _ref.enableCells,\n      enableCells = _ref$enableCells === void 0 ? defaultVoronoiProps.enableCells : _ref$enableCells,\n      _ref$cellLineWidth = _ref.cellLineWidth,\n      cellLineWidth = _ref$cellLineWidth === void 0 ? defaultVoronoiProps.cellLineWidth : _ref$cellLineWidth,\n      _ref$cellLineColor = _ref.cellLineColor,\n      cellLineColor = _ref$cellLineColor === void 0 ? defaultVoronoiProps.cellLineColor : _ref$cellLineColor,\n      _ref$enablePoints = _ref.enablePoints,\n      enablePoints = _ref$enablePoints === void 0 ? defaultVoronoiProps.enableCells : _ref$enablePoints,\n      _ref$pointSize = _ref.pointSize,\n      pointSize = _ref$pointSize === void 0 ? defaultVoronoiProps.pointSize : _ref$pointSize,\n      _ref$pointColor = _ref.pointColor,\n      pointColor = _ref$pointColor === void 0 ? defaultVoronoiProps.pointColor : _ref$pointColor,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? defaultVoronoiProps.role : _ref$role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight,\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight;\n\n  var _useVoronoi = useVoronoi({\n    data: data,\n    width: innerWidth,\n    height: innerHeight,\n    xDomain: xDomain,\n    yDomain: yDomain\n  }),\n      points = _useVoronoi.points,\n      delaunay = _useVoronoi.delaunay,\n      voronoi = _useVoronoi.voronoi;\n\n  var layerById = {\n    links: null,\n    cells: null,\n    points: null,\n    bounds: null\n  };\n\n  if (enableLinks && layers.includes('links')) {\n    layerById.links = jsx(\"path\", {\n      stroke: linkLineColor,\n      strokeWidth: linkLineWidth,\n      fill: \"none\",\n      d: delaunay.render()\n    }, \"links\");\n  }\n\n  if (enableCells && layers.includes('cells')) {\n    layerById.cells = jsx(\"path\", {\n      d: voronoi.render(),\n      fill: \"none\",\n      stroke: cellLineColor,\n      strokeWidth: cellLineWidth\n    }, \"cells\");\n  }\n\n  if (enablePoints && layers.includes('points')) {\n    layerById.points = jsx(\"path\", {\n      stroke: \"none\",\n      fill: pointColor,\n      d: delaunay.renderPoints(undefined, pointSize / 2)\n    }, \"points\");\n  }\n\n  if (layers.includes('bounds')) {\n    layerById.bounds = jsx(\"path\", {\n      fill: \"none\",\n      stroke: cellLineColor,\n      strokeWidth: cellLineWidth,\n      d: voronoi.renderBounds()\n    }, \"bounds\");\n  }\n\n  var layerContext = useVoronoiLayerContext({\n    points: points,\n    delaunay: delaunay,\n    voronoi: voronoi\n  });\n  return jsx(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    role: role,\n    children: layers.map(function (layer, i) {\n      if (layerById[layer] !== undefined) {\n        return layerById[layer];\n      }\n\n      if (typeof layer === 'function') {\n        return jsx(Fragment, {\n          children: createElement(layer, layerContext)\n        }, i);\n      }\n\n      return null;\n    })\n  });\n};\n\nvar Voronoi = function Voronoi(_ref2) {\n  var theme = _ref2.theme,\n      otherProps = _objectWithoutProperties(_ref2, [\"theme\"]);\n\n  return jsx(Container, {\n    isInteractive: false,\n    animate: false,\n    theme: theme,\n    children: jsx(InnerVoronoi, _objectSpread2({}, otherProps))\n  });\n};\n\nvar ResponsiveVoronoi = function ResponsiveVoronoi(props) {\n  return jsx(ResponsiveWrapper, {\n    children: function children(_ref) {\n      var width = _ref.width,\n          height = _ref.height;\n      return jsx(Voronoi, _objectSpread2({\n        width: width,\n        height: height\n      }, props));\n    }\n  });\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar Mesh = function Mesh(_ref) {\n  var nodes = _ref.nodes,\n      width = _ref.width,\n      height = _ref.height,\n      x = _ref.x,\n      y = _ref.y,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      onClick = _ref.onClick,\n      debug = _ref.debug;\n  var elementRef = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentIndex = _useState2[0],\n      setCurrentIndex = _useState2[1];\n\n  var _useVoronoiMesh = useVoronoiMesh({\n    points: nodes,\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    debug: debug\n  }),\n      delaunay = _useVoronoiMesh.delaunay,\n      voronoi = _useVoronoiMesh.voronoi;\n\n  var voronoiPath = useMemo(function () {\n    if (debug && voronoi) {\n      return voronoi.render();\n    }\n\n    return undefined;\n  }, [debug, voronoi]);\n  var getIndexAndNodeFromEvent = useCallback(function (event) {\n    if (!elementRef.current) {\n      return [null, null];\n    }\n\n    var _getRelativeCursor = getRelativeCursor(elementRef.current, event),\n        _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n        x = _getRelativeCursor2[0],\n        y = _getRelativeCursor2[1];\n\n    var index = delaunay.find(x, y);\n    return [index, index !== undefined ? nodes[index] : null];\n  }, [elementRef, delaunay]);\n  var handleMouseEnter = useCallback(function (event) {\n    var _getIndexAndNodeFromE = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE2 = _slicedToArray(_getIndexAndNodeFromE, 2),\n        index = _getIndexAndNodeFromE2[0],\n        node = _getIndexAndNodeFromE2[1];\n\n    setCurrentIndex(index);\n\n    if (node) {\n      onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(node, event);\n    }\n  }, [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]);\n  var handleMouseMove = useCallback(function (event) {\n    var _getIndexAndNodeFromE3 = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE4 = _slicedToArray(_getIndexAndNodeFromE3, 2),\n        index = _getIndexAndNodeFromE4[0],\n        node = _getIndexAndNodeFromE4[1];\n\n    setCurrentIndex(index);\n\n    if (node) {\n      onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(node, event);\n    }\n  }, [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]);\n  var handleMouseLeave = useCallback(function (event) {\n    setCurrentIndex(null);\n\n    if (onMouseLeave) {\n      var previousNode = undefined;\n\n      if (currentIndex !== null) {\n        previousNode = nodes[currentIndex];\n      }\n\n      previousNode && onMouseLeave(previousNode, event);\n    }\n  }, [setCurrentIndex, currentIndex, onMouseLeave, nodes]);\n  var handleClick = useCallback(function (event) {\n    var _getIndexAndNodeFromE5 = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE6 = _slicedToArray(_getIndexAndNodeFromE5, 2),\n        index = _getIndexAndNodeFromE6[0],\n        node = _getIndexAndNodeFromE6[1];\n\n    setCurrentIndex(index);\n\n    if (node) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(node, event);\n    }\n  }, [getIndexAndNodeFromEvent, setCurrentIndex, onClick]);\n  return jsxs(\"g\", {\n    ref: elementRef,\n    children: [debug && voronoi && jsxs(Fragment$1, {\n      children: [jsx(\"path\", {\n        d: voronoiPath,\n        stroke: \"red\",\n        strokeWidth: 1,\n        opacity: 0.75\n      }), currentIndex !== null && jsx(\"path\", {\n        fill: \"pink\",\n        opacity: 0.35,\n        d: voronoi.renderCell(currentIndex)\n      })]\n    }), jsx(\"rect\", {\n      width: width,\n      height: height,\n      fill: \"red\",\n      opacity: 0,\n      style: {\n        cursor: 'auto'\n      },\n      onMouseEnter: handleMouseEnter,\n      onMouseMove: handleMouseMove,\n      onMouseLeave: handleMouseLeave,\n      onClick: handleClick\n    })]\n  });\n};\n\nvar renderVoronoiToCanvas = function renderVoronoiToCanvas(ctx, voronoi) {\n  ctx.save();\n  ctx.globalAlpha = 0.75;\n  ctx.beginPath();\n  voronoi.render(ctx);\n  ctx.strokeStyle = 'red';\n  ctx.lineWidth = 1;\n  ctx.stroke();\n  ctx.restore();\n};\n\nvar renderVoronoiCellToCanvas = function renderVoronoiCellToCanvas(ctx, voronoi, index) {\n  ctx.save();\n  ctx.globalAlpha = 0.35;\n  ctx.beginPath();\n  voronoi.renderCell(index, ctx);\n  ctx.fillStyle = 'red';\n  ctx.fill();\n  ctx.restore();\n};\n\nexport { Mesh, ResponsiveVoronoi, Voronoi, computeMesh, computeMeshPoints, defaultVoronoiProps, renderVoronoiCellToCanvas, renderVoronoiToCanvas, useVoronoi, useVoronoiLayerContext, useVoronoiMesh };","map":{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/props.ts","../src/computeMesh.ts","../src/hooks.ts","../src/Voronoi.tsx","../src/ResponsiveVoronoi.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/Mesh.tsx","../src/meshCanvas.ts"],"names":["defineProperty","objectWithoutPropertiesLoose","defaultVoronoiProps","xDomain","yDomain","layers","enableLinks","linkLineWidth","linkLineColor","enableCells","cellLineWidth","cellLineColor","enablePoints","pointSize","pointColor","role","getAccessor","datum","computeMeshPoints","points","x","y","getX","getY","computeMesh","width","height","debug","delaunay","Delaunay","voronoi","useVoronoiMesh","points2d","useMemo","useVoronoi","data","xScale","scaleLinear","yScale","d","p","useVoronoiLayerContext","InnerVoronoi","margin","partialMargin","outerWidth","outerHeight","innerWidth","innerHeight","useDimensions","layerById","links","cells","bounds","layerContext","createElement","Voronoi","theme","otherProps","_jsx","ResponsiveVoronoi","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","Mesh","nodes","onMouseEnter","onMouseMove","onMouseLeave","onClick","elementRef","useRef","currentIndex","setCurrentIndex","useState","voronoiPath","getIndexAndNodeFromEvent","useCallback","getRelativeCursor","index","handleMouseEnter","node","handleMouseMove","handleMouseLeave","previousNode","handleClick","cursor","renderVoronoiToCanvas","ctx","renderVoronoiCellToCanvas"],"mappings":"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","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { VoronoiDomain, VoronoiLayer } from './types'\n\nexport const defaultVoronoiProps = {\n    xDomain: [0, 1] as VoronoiDomain,\n    yDomain: [0, 1] as VoronoiDomain,\n    layers: ['links', 'cells', 'points', 'bounds'] as VoronoiLayer[],\n    enableLinks: false,\n    linkLineWidth: 1,\n    linkLineColor: '#bbbbbb',\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#000000',\n    enablePoints: true,\n    pointSize: 4,\n    pointColor: '#666666',\n    role: 'img',\n}\n","import { Delaunay } from 'd3-delaunay'\n\ntype NumberPropertyNames<T> = {\n    [K in keyof T]: T[K] extends number ? K : never\n}[keyof T]\n\nexport type XYAccessor<Datum> = NumberPropertyNames<Datum> | ((datum: Datum) => number)\n\nconst getAccessor = <Datum>(directive: XYAccessor<Datum>) =>\n    typeof directive === 'function' ? directive : (datum: Datum) => datum[directive]\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = <Datum>({\n    points,\n    x = 'x' as NumberPropertyNames<Datum>,\n    y = 'y' as NumberPropertyNames<Datum>,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n}): [number, number][] => {\n    const getX = getAccessor<Datum>(x)\n    const getY = getAccessor<Datum>(y)\n\n    return points.map(point => [getX(point) as number, getY(point) as number])\n}\n\nexport const computeMesh = ({\n    points,\n    width,\n    height,\n    debug,\n}: {\n    points: [number, number][]\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined\n\n    return { delaunay, voronoi }\n}\n","import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport { computeMeshPoints, computeMesh, XYAccessor } from './computeMesh'\nimport { VoronoiCommonProps, VoronoiDatum, VoronoiCustomLayerProps } from './types'\n\nexport const useVoronoiMesh = <Datum>({\n    points,\n    x,\n    y,\n    width,\n    height,\n    debug,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const points2d = useMemo(\n        () => computeMeshPoints<Datum>({ points, x, y }),\n        [points, x, y]\n    )\n\n    return useMemo(() => computeMesh({ points: points2d, width, height, debug }), [\n        points2d,\n        width,\n        height,\n        debug,\n    ])\n}\n\nexport const useVoronoi = ({\n    data,\n    width,\n    height,\n    xDomain,\n    yDomain,\n}: {\n    data: VoronoiDatum[]\n    width: number\n    height: number\n    xDomain: VoronoiCommonProps['xDomain']\n    yDomain: VoronoiCommonProps['yDomain']\n}) => {\n    const xScale = useMemo(() => scaleLinear().domain(xDomain).range([0, width]), [xDomain, width])\n    const yScale = useMemo(() => scaleLinear().domain(yDomain).range([0, height]), [\n        yDomain,\n        height,\n    ])\n\n    const points = useMemo(\n        () =>\n            data.map(d => ({\n                x: xScale(d.x),\n                y: yScale(d.y),\n                data: d,\n            })),\n        [data, xScale, yScale]\n    )\n\n    return useMemo(() => {\n        const delaunay = Delaunay.from(points.map(p => [p.x, p.y]))\n        const voronoi = delaunay.voronoi([0, 0, width, height])\n\n        return {\n            points,\n            delaunay,\n            voronoi,\n        }\n    }, [points, width, height])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useVoronoiLayerContext = ({\n    points,\n    delaunay,\n    voronoi,\n}: VoronoiCustomLayerProps): VoronoiCustomLayerProps =>\n    useMemo(\n        () => ({\n            points,\n            delaunay,\n            voronoi,\n        }),\n        [points, delaunay, voronoi]\n    )\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { VoronoiSvgProps, VoronoiLayerId } from './types'\nimport { defaultVoronoiProps } from './props'\nimport { useVoronoi, useVoronoiLayerContext } from './hooks'\n\ntype InnerVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>\n\nconst InnerVoronoi = ({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    layers = defaultVoronoiProps.layers,\n    xDomain = defaultVoronoiProps.xDomain,\n    yDomain = defaultVoronoiProps.yDomain,\n    enableLinks = defaultVoronoiProps.enableLinks,\n    linkLineWidth = defaultVoronoiProps.linkLineWidth,\n    linkLineColor = defaultVoronoiProps.linkLineColor,\n    enableCells = defaultVoronoiProps.enableCells,\n    cellLineWidth = defaultVoronoiProps.cellLineWidth,\n    cellLineColor = defaultVoronoiProps.cellLineColor,\n    enablePoints = defaultVoronoiProps.enableCells,\n    pointSize = defaultVoronoiProps.pointSize,\n    pointColor = defaultVoronoiProps.pointColor,\n    role = defaultVoronoiProps.role,\n}: InnerVoronoiProps) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { points, delaunay, voronoi } = useVoronoi({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        xDomain,\n        yDomain,\n    })\n\n    const layerById: Record<VoronoiLayerId, ReactNode> = {\n        links: null,\n        cells: null,\n        points: null,\n        bounds: null,\n    }\n\n    if (enableLinks && layers.includes('links')) {\n        layerById.links = (\n            <path\n                key=\"links\"\n                stroke={linkLineColor}\n                strokeWidth={linkLineWidth}\n                fill=\"none\"\n                d={delaunay.render()}\n            />\n        )\n    }\n\n    if (enableCells && layers.includes('cells')) {\n        layerById.cells = (\n            <path\n                key=\"cells\"\n                d={voronoi.render()}\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n            />\n        )\n    }\n\n    if (enablePoints && layers.includes('points')) {\n        layerById.points = (\n            <path\n                key=\"points\"\n                stroke=\"none\"\n                fill={pointColor}\n                d={delaunay.renderPoints(undefined, pointSize / 2)}\n            />\n        )\n    }\n\n    if (layers.includes('bounds')) {\n        layerById.bounds = (\n            <path\n                key=\"bounds\"\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n                d={voronoi.renderBounds()}\n            />\n        )\n    }\n\n    const layerContext = useVoronoiLayerContext({\n        points,\n        delaunay,\n        voronoi,\n    })\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (layerById[layer as VoronoiLayerId] !== undefined) {\n                    return layerById[layer as VoronoiLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Voronoi = ({\n    theme,\n    ...otherProps\n}: Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>) => (\n    <Container isInteractive={false} animate={false} theme={theme}>\n        <InnerVoronoi {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { VoronoiSvgProps } from './types'\nimport { Voronoi } from './Voronoi'\n\ntype ResponsiveVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data'>\n\nexport const ResponsiveVoronoi = (props: ResponsiveVoronoiProps) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Voronoi width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { useRef, useState, useCallback, useMemo } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor } from '@nivo/core'\nimport { useVoronoiMesh } from './hooks'\nimport { XYAccessor } from './computeMesh'\n\ntype MouseHandler<Datum> = (datum: Datum, event: React.MouseEvent) => void\n\ninterface MeshProps<Datum> {\n    nodes: Datum[]\n    width: number\n    height: number\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    onMouseEnter?: MouseHandler<Datum>\n    onMouseMove?: MouseHandler<Datum>\n    onMouseLeave?: MouseHandler<Datum>\n    onClick?: MouseHandler<Datum>\n    debug?: boolean\n}\n\nexport const Mesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    x,\n    y,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    debug,\n}: MeshProps<Datum>) => {\n    const elementRef = useRef<SVGGElement>(null)\n    const [currentIndex, setCurrentIndex] = useState<number | null>(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        x,\n        y,\n        width,\n        height,\n        debug,\n    })\n\n    const voronoiPath = useMemo(() => {\n        if (debug && voronoi) {\n            return voronoi.render()\n        }\n\n        return undefined\n    }, [debug, voronoi])\n\n    const getIndexAndNodeFromEvent = useCallback(\n        event => {\n            if (!elementRef.current) {\n                return [null, null]\n            }\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null] as [number, Datum | null]\n        },\n        [elementRef, delaunay]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseEnter?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseMove?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent) => {\n            setCurrentIndex(null)\n            if (onMouseLeave) {\n                let previousNode: Datum | undefined = undefined\n                if (currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onMouseLeave(previousNode, event)\n            }\n        },\n        [setCurrentIndex, currentIndex, onMouseLeave, nodes]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onClick?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onClick]\n    )\n\n    return (\n        <g ref={elementRef}>\n            {debug && voronoi && (\n                <>\n                    <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />\n                    {/* highlight current cell */}\n                    {currentIndex !== null && (\n                        <path fill=\"pink\" opacity={0.35} d={voronoi.renderCell(currentIndex)} />\n                    )}\n                </>\n            )}\n            {/* transparent rect to intercept mouse events */}\n            <rect\n                width={width}\n                height={height}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        </g>\n    )\n}\n","import { Delaunay, Voronoi } from 'd3-delaunay'\n\nexport const renderVoronoiToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>,\n    index: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'red'\n    ctx.fill()\n\n    ctx.restore()\n}\n"]},"metadata":{},"sourceType":"module"}