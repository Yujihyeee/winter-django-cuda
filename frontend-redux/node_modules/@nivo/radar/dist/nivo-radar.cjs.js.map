{"version":3,"file":"nivo-radar.cjs.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/RadarLayer.tsx","../src/RadarGridLabels.tsx","../src/RadarGridLevels.tsx","../src/RadarGrid.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/RadarSlice.tsx","../src/RadarSlices.tsx","../src/RadarDots.tsx","../src/RadarGridLabel.tsx","../src/RadarSliceTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/hooks.ts","../src/Radar.tsx","../src/ResponsiveRadar.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { lineRadial, CurveFactory } from 'd3-shape'\nimport { ScaleLinear } from 'd3-scale'\nimport { useMotionConfig, useTheme, useAnimatedPath } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { RadarCommonProps } from './types'\n\ninterface RadarLayerProps<D extends Record<string, unknown>> {\n    data: D[]\n    item: string\n    colorByKey: Record<string | number, string>\n    radiusScale: ScaleLinear<number, number>\n    angleStep: number\n    curveFactory: CurveFactory\n    borderWidth: RadarCommonProps<D>['borderWidth']\n    borderColor: RadarCommonProps<D>['borderColor']\n    fillOpacity: RadarCommonProps<D>['fillOpacity']\n    blendMode: RadarCommonProps<D>['blendMode']\n}\n\nexport const RadarLayer = <D extends Record<string, unknown>>({\n    data,\n    item: key,\n    colorByKey,\n    radiusScale,\n    angleStep,\n    curveFactory,\n    borderWidth,\n    borderColor,\n    fillOpacity,\n    blendMode,\n}: RadarLayerProps<D>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const lineGenerator = useMemo(() => {\n        return lineRadial<number>()\n            .radius(d => radiusScale(d))\n            .angle((_, i) => i * angleStep)\n            .curve(curveFactory)\n    }, [radiusScale, angleStep, curveFactory])\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(lineGenerator(data.map(d => d[key] as number)) as string)\n    const animatedProps = useSpring<{ fill: string; stroke: string }>({\n        fill: colorByKey[key],\n        stroke: getBorderColor({ key, color: colorByKey[key] }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            key={key}\n            d={animatedPath}\n            fill={animatedProps.fill}\n            fillOpacity={fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={borderWidth}\n            style={{ mixBlendMode: blendMode }}\n        />\n    )\n}\n","import { createElement } from 'react'\nimport { useSprings } from '@react-spring/web'\nimport { useMotionConfig, positionFromAngle, radiansToDegrees } from '@nivo/core'\nimport { GridLabelComponent } from './types'\n\nconst textAnchorFromAngle = (_angle: number) => {\n    const angle = radiansToDegrees(_angle) + 90\n\n    if (angle <= 10 || angle >= 350 || (angle >= 170 && angle <= 190)) return 'middle' as const\n    if (angle > 180) return 'end' as const\n    return 'start' as const\n}\n\ninterface RadarGridLabelsProps {\n    radius: number\n    angles: number[]\n    indices: string[]\n    label: GridLabelComponent\n    labelOffset: number\n}\n\nexport const RadarGridLabels = ({\n    radius,\n    angles,\n    indices,\n    label: labelComponent,\n    labelOffset,\n}: RadarGridLabelsProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = indices.map((index, i) => {\n        const position = positionFromAngle(angles[i], radius + labelOffset)\n        const textAnchor = textAnchorFromAngle(angles[i])\n\n        return {\n            id: index,\n            angle: radiansToDegrees(angles[i]),\n            anchor: textAnchor,\n            ...position,\n        }\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y})`,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return (\n        <>\n            {springs.map((animatedProps, index) => {\n                const label = labels[index]\n\n                return createElement(labelComponent, {\n                    key: label.id,\n                    id: label.id,\n                    anchor: label.anchor,\n                    angle: label.angle,\n                    x: label.x,\n                    y: label.y,\n                    animated: animatedProps,\n                })\n            })}\n        </>\n    )\n}\n","import { memo, SVGProps, useMemo } from 'react'\nimport { lineRadial, curveLinearClosed } from 'd3-shape'\nimport { animated, useSpring, to } from '@react-spring/web'\nimport { useTheme, useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { RadarCommonProps } from './types'\n\ninterface RadarGridLevelCircularProps {\n    radius: number\n}\n\nconst RadarGridLevelCircular = memo(({ radius }: RadarGridLevelCircularProps) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        radius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            fill=\"none\"\n            r={to(animatedProps.radius, value => Math.max(value, 0))}\n            {...(theme.grid.line as Omit<SVGProps<SVGCircleElement>, 'ref'>)}\n        />\n    )\n})\n\ninterface RadarGridLevelLinearProps {\n    radius: number\n    angleStep: number\n    dataLength: number\n}\n\nconst RadarGridLevelLinear = ({ radius, angleStep, dataLength }: RadarGridLevelLinearProps) => {\n    const theme = useTheme()\n\n    const radarLineGenerator = useMemo(\n        () =>\n            lineRadial<number>()\n                .angle(i => i * angleStep)\n                .radius(radius)\n                .curve(curveLinearClosed),\n        [angleStep, radius]\n    )\n\n    const points = Array.from({ length: dataLength }, (_, i) => i)\n    const animatedPath = useAnimatedPath(radarLineGenerator(points) as string)\n\n    return (\n        <animated.path\n            fill=\"none\"\n            d={animatedPath}\n            {...(theme.grid.line as Omit<SVGProps<SVGPathElement>, 'ref'>)}\n        />\n    )\n}\n\ninterface RadarGridLevelsProps<D extends Record<string, unknown>> {\n    shape: RadarCommonProps<D>['gridShape']\n    radius: number\n    angleStep: number\n    dataLength: number\n}\n\nexport const RadarGridLevels = <D extends Record<string, unknown>>({\n    shape,\n    ...props\n}: RadarGridLevelsProps<D>) => {\n    return shape === 'circular' ? (\n        <RadarGridLevelCircular radius={props.radius} />\n    ) : (\n        <RadarGridLevelLinear {...props} />\n    )\n}\n","import { SVGProps, useMemo } from 'react'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport { RadarGridLabels } from './RadarGridLabels'\nimport { RadarGridLevels } from './RadarGridLevels'\nimport { GridLabelComponent, RadarCommonProps } from './types'\n\ninterface RadarGridProps<D extends Record<string, unknown>> {\n    indices: string[]\n    shape: RadarCommonProps<D>['gridShape']\n    radius: number\n    levels: number\n    angleStep: number\n    label: GridLabelComponent\n    labelOffset: number\n}\n\nexport const RadarGrid = <D extends Record<string, unknown>>({\n    indices,\n    levels,\n    shape,\n    radius,\n    angleStep,\n    label,\n    labelOffset,\n}: RadarGridProps<D>) => {\n    const theme = useTheme()\n    const { radii, angles } = useMemo(() => {\n        return {\n            radii: Array.from({ length: levels })\n                .map((_, i) => (radius / levels) * (i + 1))\n                .reverse(),\n            angles: Array.from({ length: indices.length }, (_, i) => i * angleStep - Math.PI / 2),\n        }\n    }, [indices, levels, radius, angleStep])\n\n    return (\n        <>\n            {angles.map((angle, i) => {\n                const position = positionFromAngle(angle, radius)\n                return (\n                    <line\n                        key={`axis.${i}`}\n                        x1={0}\n                        y1={0}\n                        x2={position.x}\n                        y2={position.y}\n                        {...(theme.grid.line as SVGProps<SVGLineElement>)}\n                    />\n                )\n            })}\n            {radii.map((radius, i) => (\n                <RadarGridLevels<D>\n                    key={`level.${i}`}\n                    shape={shape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    dataLength={indices.length}\n                />\n            ))}\n            <RadarGridLabels\n                radius={radius}\n                angles={angles}\n                indices={indices}\n                labelOffset={labelOffset}\n                label={label}\n            />\n        </>\n    )\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { useMemo, useState, useCallback, createElement } from 'react'\nimport { Arc } from 'd3-shape'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { RadarCommonProps, RadarDataProps, RadarSliceTooltipDatum } from './types'\n\ninterface RadarSliceProps<D extends Record<string, unknown>> {\n    datum: D\n    keys: RadarDataProps<D>['keys']\n    index: string | number\n    formatValue: (value: number, context: string) => string\n    colorByKey: Record<string, string>\n    startAngle: number\n    endAngle: number\n    radius: number\n    arcGenerator: Arc<void, { startAngle: number; endAngle: number }>\n    tooltip: RadarCommonProps<D>['sliceTooltip']\n}\n\nexport const RadarSlice = <D extends Record<string, unknown>>({\n    datum,\n    keys,\n    index,\n    formatValue,\n    colorByKey,\n    radius,\n    startAngle,\n    endAngle,\n    arcGenerator,\n    tooltip,\n}: RadarSliceProps<D>) => {\n    const [isHover, setIsHover] = useState(false)\n    const theme = useTheme()\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipData = useMemo(() => {\n        const data: RadarSliceTooltipDatum[] = keys.map(key => ({\n            color: colorByKey[key],\n            id: key,\n            value: datum[key] as number,\n            formattedValue: formatValue(datum[key] as number, key),\n        }))\n        data.sort((a, b) => a.value - b.value)\n        data.reverse()\n\n        return data\n    }, [datum, keys, formatValue, colorByKey])\n\n    const showItemTooltip = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(\n                createElement(tooltip, {\n                    index,\n                    data: tooltipData,\n                }),\n                event\n            )\n        },\n        [showTooltipFromEvent, tooltip, index, tooltipData]\n    )\n\n    const hideItemTooltip = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [hideTooltip, setIsHover])\n\n    const { path, tipX, tipY } = useMemo(() => {\n        const position = positionFromAngle(\n            startAngle + (endAngle - startAngle) * 0.5 - Math.PI / 2,\n            radius\n        )\n\n        return {\n            path: arcGenerator({ startAngle, endAngle }) as string,\n            tipX: position.x,\n            tipY: position.y,\n        }\n    }, [startAngle, endAngle, radius, arcGenerator])\n\n    return (\n        <>\n            {isHover && <line x1={0} y1={0} x2={tipX} y2={tipY} style={theme.crosshair.line} />}\n            <path\n                d={path}\n                fill=\"#F00\"\n                fillOpacity={0}\n                onMouseEnter={showItemTooltip}\n                onMouseMove={showItemTooltip}\n                onMouseLeave={hideItemTooltip}\n            />\n        </>\n    )\n}\n","import { arc as d3Arc } from 'd3-shape'\nimport { RadarSlice } from './RadarSlice'\nimport { RadarColorMapping, RadarCommonProps, RadarDataProps } from './types'\n\ninterface RadarSlicesProps<D extends Record<string, unknown>> {\n    data: RadarDataProps<D>['data']\n    keys: RadarDataProps<D>['keys']\n    getIndex: (d: D) => string | number\n    formatValue: (value: number, context: string) => string\n    colorByKey: RadarColorMapping\n    radius: number\n    angleStep: number\n    tooltip: RadarCommonProps<D>['sliceTooltip']\n}\n\nexport const RadarSlices = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    getIndex,\n    formatValue,\n    colorByKey,\n    radius,\n    angleStep,\n    tooltip,\n}: RadarSlicesProps<D>) => {\n    const arc = d3Arc<{ startAngle: number; endAngle: number }>().outerRadius(radius).innerRadius(0)\n\n    const halfAngleStep = angleStep * 0.5\n    let rootStartAngle = -halfAngleStep\n\n    return (\n        <>\n            {data.map(d => {\n                const index = getIndex(d)\n                const startAngle = rootStartAngle\n                const endAngle = startAngle + angleStep\n\n                rootStartAngle += angleStep\n\n                return (\n                    <RadarSlice\n                        key={index}\n                        datum={d}\n                        keys={keys}\n                        index={index}\n                        formatValue={formatValue}\n                        colorByKey={colorByKey}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        radius={radius}\n                        arcGenerator={arc}\n                        tooltip={tooltip}\n                    />\n                )\n            })}\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { ScaleLinear } from 'd3-scale'\nimport { useTheme, positionFromAngle, DotsItem, usePropertyAccessor } from '@nivo/core'\nimport { getInheritedColorGenerator } from '@nivo/colors'\nimport { RadarCommonProps, RadarDataProps, PointProps, PointData, RadarColorMapping } from './types'\n\ninterface RadarDotsProps<D extends Record<string, unknown>> {\n    data: RadarDataProps<D>['data']\n    keys: RadarDataProps<D>['keys']\n    radiusScale: ScaleLinear<number, number>\n    getIndex: (d: D) => string\n    colorByKey: RadarColorMapping\n    angleStep: number\n    symbol?: RadarCommonProps<D>['dotSymbol']\n    size: number\n    color: RadarCommonProps<D>['dotColor']\n    borderWidth: number\n    borderColor: RadarCommonProps<D>['dotBorderColor']\n    enableLabel: boolean\n    label: RadarCommonProps<D>['dotLabel']\n    formatValue: (value: number, context: string) => string\n    labelYOffset: number\n}\n\nexport const RadarDots = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    getIndex,\n    colorByKey,\n    radiusScale,\n    angleStep,\n    symbol,\n    size = 6,\n    color = { from: 'color' },\n    borderWidth = 0,\n    borderColor = { from: 'color' },\n    enableLabel = false,\n    label = 'value',\n    formatValue,\n    labelYOffset,\n}: RadarDotsProps<D>) => {\n    const theme = useTheme()\n    const fillColor = getInheritedColorGenerator(color, theme)\n    const strokeColor = getInheritedColorGenerator(borderColor, theme)\n    const getLabel = usePropertyAccessor<PointData, string | number>(label)\n\n    const points: PointProps[] = useMemo(\n        () =>\n            data.reduce((acc, datum, i) => {\n                const index = getIndex(datum)\n                keys.forEach(key => {\n                    const value = datum[key] as number\n\n                    const pointData: PointData = {\n                        index,\n                        key,\n                        value,\n                        formattedValue: formatValue(value, key),\n                        color: colorByKey[key],\n                    }\n\n                    acc.push({\n                        key: `${key}.${index}`,\n                        label: enableLabel ? getLabel(pointData) : undefined,\n                        style: {\n                            fill: fillColor(pointData),\n                            stroke: strokeColor(pointData),\n                            ...positionFromAngle(\n                                angleStep * i - Math.PI / 2,\n                                radiusScale(datum[key] as number)\n                            ),\n                        },\n                        data: pointData,\n                    })\n                })\n\n                return acc\n            }, [] as PointProps[]),\n        [\n            data,\n            keys,\n            getIndex,\n            colorByKey,\n            enableLabel,\n            getLabel,\n            formatValue,\n            fillColor,\n            strokeColor,\n            angleStep,\n            radiusScale,\n        ]\n    )\n\n    return (\n        <>\n            {points.map(point => (\n                <DotsItem\n                    key={point.key}\n                    x={point.style.x}\n                    y={point.style.y}\n                    symbol={symbol}\n                    size={size}\n                    color={point.style.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.style.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    datum={point.data}\n                />\n            ))}\n        </>\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { GridLabelProps } from './types'\n\nexport const RadarGridLabel = ({ id, anchor, animated: animatedProps }: GridLabelProps) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <text style={theme.axis.ticks.text} dominantBaseline=\"central\" textAnchor={anchor}>\n                {id}\n            </text>\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { RadarSliceTooltipProps } from './types'\n\nexport const RadarSliceTooltip = ({ index, data }: RadarSliceTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            data.map(datum => [\n                <Chip key={datum.id} color={datum.color} />,\n                datum.id,\n                datum.formattedValue,\n            ]),\n        [data]\n    )\n\n    return <TableTooltip title={<strong>{index}</strong>} rows={rows} />\n}\n","import { RadarGridLabel } from './RadarGridLabel'\nimport { RadarSliceTooltip } from './RadarSliceTooltip'\nimport { RadarLayerId } from './types'\n\nexport const svgDefaultProps = {\n    layers: ['grid', 'layers', 'slices', 'dots', 'legends'] as RadarLayerId[],\n\n    maxValue: 'auto' as const,\n\n    curve: 'linearClosed' as const,\n\n    borderWidth: 2,\n    borderColor: { from: 'color' },\n\n    gridLevels: 5,\n    gridShape: 'circular' as const,\n    gridLabelOffset: 16,\n    gridLabel: RadarGridLabel,\n\n    enableDots: true,\n    dotSize: 6,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 0,\n    dotBorderColor: { from: 'color' },\n    enableDotLabel: false,\n    dotLabel: 'formattedValue',\n    dotLabelYOffset: -12,\n\n    colors: { scheme: 'nivo' as const },\n    fillOpacity: 0.25,\n    blendMode: 'normal' as const,\n\n    isInteractive: true,\n    sliceTooltip: RadarSliceTooltip,\n\n    legends: [],\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle' as const,\n}\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { useCurveInterpolation, usePropertyAccessor, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { svgDefaultProps } from './props'\nimport {\n    RadarColorMapping,\n    RadarCommonProps,\n    RadarDataProps,\n    RadarCustomLayerProps,\n    BoundLegendProps,\n} from './types'\n\nexport const useRadar = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    indexBy,\n    maxValue,\n    valueFormat,\n    curve,\n    width,\n    height,\n    colors = svgDefaultProps.colors,\n    legends,\n}: {\n    data: RadarDataProps<D>['data']\n    keys: RadarDataProps<D>['keys']\n    indexBy: RadarDataProps<D>['indexBy']\n    maxValue: RadarCommonProps<D>['maxValue']\n    valueFormat?: RadarCommonProps<D>['valueFormat']\n    curve: RadarCommonProps<D>['curve']\n    width: number\n    height: number\n    colors: RadarCommonProps<D>['colors']\n    legends: RadarCommonProps<D>['legends']\n}) => {\n    const getIndex = usePropertyAccessor<D, string>(indexBy)\n    const indices = useMemo(() => data.map(getIndex), [data, getIndex])\n    const formatValue = useValueFormatter<number, string>(valueFormat)\n\n    const getColor = useOrdinalColorScale<{ key: string; index: number }>(colors, 'key')\n    const colorByKey: RadarColorMapping = useMemo(\n        () =>\n            keys.reduce<RadarColorMapping>((mapping, key, index) => {\n                mapping[key] = getColor({ key, index })\n                return mapping\n            }, {}),\n        [keys, getColor]\n    )\n\n    const { radius, radiusScale, centerX, centerY, angleStep } = useMemo(() => {\n        const allValues: number[] = data.reduce(\n            (acc: number[], d) => [...acc, ...keys.map(key => d[key] as number)],\n            [] as number[]\n        )\n        const computedMaxValue = maxValue !== 'auto' ? maxValue : Math.max(...allValues)\n\n        const radius = Math.min(width, height) / 2\n        const radiusScale = scaleLinear<number, number>()\n            .range([0, radius])\n            .domain([0, computedMaxValue])\n\n        return {\n            radius,\n            radiusScale,\n            centerX: width / 2,\n            centerY: height / 2,\n            angleStep: (Math.PI * 2) / data.length,\n        }\n    }, [keys, data, maxValue, width, height])\n\n    const curveFactory = useCurveInterpolation(curve)\n\n    const customLayerProps: RadarCustomLayerProps<D> = useMemo(\n        () => ({\n            data,\n            keys,\n            indices,\n            colorByKey,\n            centerX,\n            centerY,\n            radiusScale,\n            angleStep,\n        }),\n        [data, keys, indices, colorByKey, centerX, centerY, radiusScale, angleStep]\n    )\n\n    const legendData = useMemo(\n        () => keys.map(key => ({ id: key, label: key, color: colorByKey[key] })),\n        [keys, colorByKey]\n    )\n\n    const boundLegends: BoundLegendProps[] = useMemo(\n        () =>\n            legends.map(({ data: customData, ...legend }) => {\n                const boundData = customData?.map(cd => {\n                    const findData = legendData.find(ld => ld.id === cd.id) || {}\n                    return { ...findData, ...cd }\n                })\n                return { ...legend, data: boundData || legendData }\n            }),\n        [legends, legendData]\n    )\n\n    return {\n        getIndex,\n        indices,\n        formatValue,\n        colorByKey,\n        radius,\n        radiusScale,\n        centerX,\n        centerY,\n        angleStep,\n        curveFactory,\n        legendData,\n        boundLegends,\n        customLayerProps,\n    }\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport { Container, useDimensions, SvgWrapper } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { RadarLayer } from './RadarLayer'\nimport { RadarGrid } from './RadarGrid'\nimport { RadarSlices } from './RadarSlices'\nimport { RadarDots } from './RadarDots'\nimport { svgDefaultProps } from './props'\nimport { RadarLayerId, RadarSvgProps } from './types'\nimport { useRadar } from './hooks'\n\ntype InnerRadarProps<D extends Record<string, unknown>> = Omit<\n    RadarSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerRadar = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    indexBy,\n    layers = svgDefaultProps.layers,\n    maxValue = svgDefaultProps.maxValue,\n    valueFormat,\n    curve = svgDefaultProps.curve,\n    margin: partialMargin,\n    width,\n    height,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n    gridLevels = svgDefaultProps.gridLevels,\n    gridShape = svgDefaultProps.gridShape,\n    gridLabel = svgDefaultProps.gridLabel,\n    gridLabelOffset = svgDefaultProps.gridLabelOffset,\n    enableDots = svgDefaultProps.enableDots,\n    dotSymbol,\n    dotSize = svgDefaultProps.dotSize,\n    dotColor = svgDefaultProps.dotColor,\n    dotBorderWidth = svgDefaultProps.dotBorderWidth,\n    dotBorderColor = svgDefaultProps.dotBorderColor,\n    enableDotLabel = svgDefaultProps.enableDotLabel,\n    dotLabel = svgDefaultProps.dotLabel,\n    dotLabelYOffset = svgDefaultProps.dotLabelYOffset,\n    colors = svgDefaultProps.colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    blendMode = svgDefaultProps.blendMode,\n    isInteractive = svgDefaultProps.isInteractive,\n    sliceTooltip = svgDefaultProps.sliceTooltip,\n    legends = svgDefaultProps.legends,\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerRadarProps<D>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        getIndex,\n        indices,\n        formatValue,\n        colorByKey,\n        radius,\n        radiusScale,\n        centerX,\n        centerY,\n        angleStep,\n        curveFactory,\n        boundLegends,\n        customLayerProps,\n    } = useRadar<D>({\n        data,\n        keys,\n        indexBy,\n        maxValue,\n        valueFormat,\n        curve,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        legends,\n    })\n\n    const layerById: Record<RadarLayerId, ReactNode> = {\n        grid: null,\n        layers: null,\n        slices: null,\n        dots: null,\n        legends: null,\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <g key=\"grid\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarGrid<D>\n                    levels={gridLevels}\n                    shape={gridShape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    indices={indices}\n                    label={gridLabel}\n                    labelOffset={gridLabelOffset}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('layers')) {\n        layerById.layers = (\n            <g key=\"layers\" transform={`translate(${centerX}, ${centerY})`}>\n                {keys.map(key => (\n                    <RadarLayer<D>\n                        key={key}\n                        data={data}\n                        item={key}\n                        colorByKey={colorByKey}\n                        radiusScale={radiusScale}\n                        angleStep={angleStep}\n                        curveFactory={curveFactory}\n                        borderWidth={borderWidth}\n                        borderColor={borderColor}\n                        fillOpacity={fillOpacity}\n                        blendMode={blendMode}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    if (layers.includes('slices') && isInteractive) {\n        layerById.slices = (\n            <g key=\"slices\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarSlices<D>\n                    data={data}\n                    keys={keys}\n                    getIndex={getIndex}\n                    formatValue={formatValue}\n                    colorByKey={colorByKey}\n                    radius={radius}\n                    angleStep={angleStep}\n                    tooltip={sliceTooltip}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <g key=\"dots\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarDots<D>\n                    data={data}\n                    keys={keys}\n                    getIndex={getIndex}\n                    radiusScale={radiusScale}\n                    angleStep={angleStep}\n                    symbol={dotSymbol}\n                    size={dotSize}\n                    colorByKey={colorByKey}\n                    color={dotColor}\n                    borderWidth={dotBorderWidth}\n                    borderColor={dotBorderColor}\n                    enableLabel={enableDotLabel}\n                    label={dotLabel}\n                    formatValue={formatValue}\n                    labelYOffset={dotLabelYOffset}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {boundLegends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Radar = <D extends Record<string, unknown>>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: RadarSvgProps<D>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerRadar<D> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { RadarSvgProps } from './types'\nimport { Radar } from './Radar'\n\nexport const ResponsiveRadar = <D extends Record<string, unknown>>(\n    props: Omit<RadarSvgProps<D>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Radar<D> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","defineProperty","RadarLayer","data","key","item","colorByKey","radiusScale","angleStep","curveFactory","borderWidth","borderColor","fillOpacity","blendMode","theme","useTheme","getBorderColor","useInheritedColor","lineGenerator","useMemo","lineRadial","radius","d","angle","_","i","curve","useMotionConfig","animate","springConfig","config","animatedPath","useAnimatedPath","map","animatedProps","useSpring","fill","stroke","color","immediate","_jsx","animated","mixBlendMode","textAnchorFromAngle","_angle","radiansToDegrees","RadarGridLabels","angles","indices","labelComponent","label","labelOffset","labels","index","position","positionFromAngle","textAnchor","id","anchor","springs","useSprings","length","transform","x","y","createElement","RadarGridLevelCircular","memo","to","value","Math","max","grid","line","RadarGridLevelLinear","dataLength","radarLineGenerator","curveLinearClosed","points","Array","from","RadarGridLevels","shape","props","RadarGrid","levels","radii","reverse","PI","_jsxs","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","RadarSlice","datum","keys","formatValue","startAngle","endAngle","arcGenerator","tooltip","useState","isHover","setIsHover","useTooltip","showTooltipFromEvent","hideTooltip","tooltipData","formattedValue","sort","a","b","showItemTooltip","useCallback","event","hideItemTooltip","path","tipX","tipY","crosshair","RadarSlices","getIndex","arc","d3Arc","outerRadius","innerRadius","halfAngleStep","rootStartAngle","RadarDots","symbol","size","enableLabel","labelYOffset","fillColor","getInheritedColorGenerator","strokeColor","getLabel","usePropertyAccessor","reduce","acc","forEach","pointData","push","undefined","style","point","DotsItem","RadarGridLabel","axis","ticks","text","RadarSliceTooltip","rows","Chip","TableTooltip","svgDefaultProps","layers","maxValue","gridLevels","gridShape","gridLabelOffset","gridLabel","enableDots","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","colors","scheme","isInteractive","sliceTooltip","legends","role","motionConfig","arrayWithoutHoles","iterableToArray","nonIterableSpread","useRadar","indexBy","valueFormat","width","height","useValueFormatter","getColor","useOrdinalColorScale","mapping","allValues","computedMaxValue","min","scaleLinear","range","domain","centerX","centerY","useCurveInterpolation","customLayerProps","legendData","boundLegends","customData","legend","boundData","cd","findData","find","ld","InnerRadar","partialMargin","margin","dotSymbol","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","layerById","slices","dots","includes","Fragment","BoxLegendSvg","SvgWrapper","layer","Radar","renderWrapper","otherProps","Container","ResponsiveRadar","ResponsiveWrapper"],"mappings":";;;;;;;;;;;;;;AAAe,SAAS,6BAA6B,CAAC,MAAM,EAAE,QAAQ,EAAE;AACxE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB,EAAE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEb,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACxB,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC7C,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC9B,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;ACZe,SAAS,wBAAwB,CAAC,MAAM,EAAE,QAAQ,EAAE;AACnE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAGA,6BAA4B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC9D,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEb,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AAEhE,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClD,MAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAChC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC/C,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,SAAS;AAC7E,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAChC,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;AClBe,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACzD,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;AAClB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,GAAG,MAAM;AACT,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,GAAG,CAAC;AACb;;ACXA,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE;AACzC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAEjC,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACvD,IAAI,IAAI,cAAc,EAAE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;AAChE,MAAM,OAAO,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC;AACrE,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnC,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AAEc,SAAS,cAAc,CAAC,MAAM,EAAE;AAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAE1D,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AACf,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AAC3D,QAAQC,eAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,OAAO,CAAC,CAAC;AACT,KAAK,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE;AACjD,MAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;AAChF,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AACrD,QAAQ,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;AACzF,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;ACbO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAWA;AAAA,MAVtBC,IAUsB,QAVtBA,IAUsB;AAAA,MAThBC,GASgB,QATtBC,IASsB;AAAA,MARtBC,UAQsB,QARtBA,UAQsB;AAAA,MAPtBC,WAOsB,QAPtBA,WAOsB;AAAA,MANtBC,SAMsB,QANtBA,SAMsB;AAAA,MALtBC,YAKsB,QALtBA,YAKsB;AAAA,MAJtBC,WAIsB,QAJtBA,WAIsB;AAAA,MAHtBC,WAGsB,QAHtBA,WAGsB;AAAA,MAFtBC,WAEsB,QAFtBA,WAEsB;AAAA,MADtBC,SACsB,QADtBA,SACsB;AACtB,MAAMC,KAAK,GAAGC,aAAQ,EAAtB;AACA,MAAMC,cAAc,GAAGC,wBAAiB,CAACN,WAAD,EAAcG,KAAd,CAAxC;AAEA,MAAMI,aAAa,GAAGC,aAAO,CAAC,YAAM;AAChC,WAAOC,kBAAU,GACZC,MADE,CACK,UAAAC,CAAC;AAAA,aAAIf,WAAW,CAACe,CAAD,CAAf;AAAA,KADN,EAEFC,KAFE,CAEI,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAC,GAAGjB,SAAd;AAAA,KAFJ,EAGFkB,KAHE,CAGIjB,YAHJ,CAAP;AAIH,GAL4B,EAK1B,CAACF,WAAD,EAAcC,SAAd,EAAyBC,YAAzB,CAL0B,CAA7B;;AAJsB,yBAWoBkB,oBAAe,EAXnC;AAAA,MAWdC,OAXc,oBAWdA,OAXc;AAAA,MAWGC,YAXH,oBAWLC,MAXK;;AAYtB,MAAMC,YAAY,GAAGC,oBAAe,CAACd,aAAa,CAACf,IAAI,CAAC8B,GAAL,CAAS,UAAAX,CAAC;AAAA,WAAIA,CAAC,CAAClB,GAAD,CAAL;AAAA,GAAV,CAAD,CAAd,CAApC;AACA,MAAM8B,aAAa,GAAGC,aAAS,CAAmC;AAC9DC,IAAAA,IAAI,EAAE9B,UAAU,CAACF,GAAD,CAD8C;AAE9DiC,IAAAA,MAAM,EAAErB,cAAc,CAAC;AAAEZ,MAAAA,GAAG,EAAHA,GAAF;AAAOkC,MAAAA,KAAK,EAAEhC,UAAU,CAACF,GAAD;AAAxB,KAAD,CAFwC;AAG9D0B,IAAAA,MAAM,EAAED,YAHsD;AAI9DU,IAAAA,SAAS,EAAE,CAACX;AAJkD,GAAnC,CAA/B;AAOA,SACIY,eAACC,YAAD,CAAU,IAAV;AAEI,IAAA,CAAC,EAAEV,YAFP;AAGI,IAAA,IAAI,EAAEG,aAAa,CAACE,IAHxB;AAII,IAAA,WAAW,EAAExB,WAJjB;AAKI,IAAA,MAAM,EAAEsB,aAAa,CAACG,MAL1B;AAMI,IAAA,WAAW,EAAE3B,WANjB;AAOI,IAAA,KAAK,EAAE;AAAEgC,MAAAA,YAAY,EAAE7B;AAAhB;AAPX,KACST,GADT,CADJ;AAWH,CA1CM;;AChBP,IAAMuC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD,EAAoB;AAC5C,MAAMrB,KAAK,GAAGsB,qBAAgB,CAACD,MAAD,CAAhB,GAA2B,EAAzC;AAEA,MAAIrB,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAI,GAAxB,IAAgCA,KAAK,IAAI,GAAT,IAAgBA,KAAK,IAAI,GAA7D,EAAmE,OAAO,QAAP;AACnE,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,KAAP;AACjB,SAAO,OAAP;AACH,CAND;;AAgBO,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,OAMH;AAAA,MALxBzB,MAKwB,QALxBA,MAKwB;AAAA,MAJxB0B,MAIwB,QAJxBA,MAIwB;AAAA,MAHxBC,OAGwB,QAHxBA,OAGwB;AAAA,MAFjBC,cAEiB,QAFxBC,KAEwB;AAAA,MADxBC,WACwB,QADxBA,WACwB;;AAAA,yBACkBxB,oBAAe,EADjC;AAAA,MAChBC,OADgB,oBAChBA,OADgB;AAAA,MACCC,YADD,oBACPC,MADO;;AAGxB,MAAMsB,MAAM,GAAGJ,OAAO,CAACf,GAAR,CAAY,UAACoB,KAAD,EAAQ5B,CAAR,EAAc;AACrC,QAAM6B,QAAQ,GAAGC,sBAAiB,CAACR,MAAM,CAACtB,CAAD,CAAP,EAAYJ,MAAM,GAAG8B,WAArB,CAAlC;AACA,QAAMK,UAAU,GAAGb,mBAAmB,CAACI,MAAM,CAACtB,CAAD,CAAP,CAAtC;AAEA;AACIgC,MAAAA,EAAE,EAAEJ,KADR;AAEI9B,MAAAA,KAAK,EAAEsB,qBAAgB,CAACE,MAAM,CAACtB,CAAD,CAAP,CAF3B;AAGIiC,MAAAA,MAAM,EAAEF;AAHZ,OAIOF,QAJP;AAMH,GAVc,CAAf;AAYA,MAAMK,OAAO,GAAGC,cAAU,CACtBR,MAAM,CAACS,MADe,EAEtBT,MAAM,CAACnB,GAAP,CAAW,UAAAiB,KAAK;AAAA,WAAK;AACjBY,MAAAA,SAAS,sBAAeZ,KAAK,CAACa,CAArB,eAA2Bb,KAAK,CAACc,CAAjC,MADQ;AAEjBlC,MAAAA,MAAM,EAAED,YAFS;AAGjBU,MAAAA,SAAS,EAAE,CAACX;AAHK,KAAL;AAAA,GAAhB,CAFsB,CAA1B;AASA,SACIY;AAAA,cACKmB,OAAO,CAAC1B,GAAR,CAAY,UAACC,aAAD,EAAgBmB,KAAhB,EAA0B;AACnC,UAAMH,KAAK,GAAGE,MAAM,CAACC,KAAD,CAApB;AAEA,aAAOY,mBAAa,CAAChB,cAAD,EAAiB;AACjC7C,QAAAA,GAAG,EAAE8C,KAAK,CAACO,EADsB;AAEjCA,QAAAA,EAAE,EAAEP,KAAK,CAACO,EAFuB;AAGjCC,QAAAA,MAAM,EAAER,KAAK,CAACQ,MAHmB;AAIjCnC,QAAAA,KAAK,EAAE2B,KAAK,CAAC3B,KAJoB;AAKjCwC,QAAAA,CAAC,EAAEb,KAAK,CAACa,CALwB;AAMjCC,QAAAA,CAAC,EAAEd,KAAK,CAACc,CANwB;AAOjCvB,QAAAA,QAAQ,EAAEP;AAPuB,OAAjB,CAApB;AASH,KAZA;AADL,IADJ;AAiBH,CA/CM;;ACXP,IAAMgC,sBAAsB,GAAGC,UAAI,CAAC,gBAA6C;AAAA,MAA1C9C,MAA0C,QAA1CA,MAA0C;AAC7E,MAAMP,KAAK,GAAGC,aAAQ,EAAtB;;AAD6E,yBAEnCY,oBAAe,EAFoB;AAAA,MAErEC,OAFqE,oBAErEA,OAFqE;AAAA,MAEpDC,YAFoD,oBAE5DC,MAF4D;;AAI7E,MAAMI,aAAa,GAAGC,aAAS,CAAC;AAC5Bd,IAAAA,MAAM,EAANA,MAD4B;AAE5BS,IAAAA,MAAM,EAAED,YAFoB;AAG5BU,IAAAA,SAAS,EAAE,CAACX;AAHgB,GAAD,CAA/B;AAMA,SACIY,eAACC,YAAD,CAAU,MAAV;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,CAAC,EAAE2B,MAAE,CAAClC,aAAa,CAACb,MAAf,EAAuB,UAAAgD,KAAK;AAAA,aAAIC,IAAI,CAACC,GAAL,CAASF,KAAT,EAAgB,CAAhB,CAAJ;AAAA,KAA5B;AAFT,KAGSvD,KAAK,CAAC0D,IAAN,CAAWC,IAHpB,EADJ;AAOH,CAjBkC,CAAnC;;AAyBA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,QAAkE;AAAA,MAA/DrD,MAA+D,SAA/DA,MAA+D;AAAA,MAAvDb,SAAuD,SAAvDA,SAAuD;AAAA,MAA5CmE,UAA4C,SAA5CA,UAA4C;AAC3F,MAAM7D,KAAK,GAAGC,aAAQ,EAAtB;AAEA,MAAM6D,kBAAkB,GAAGzD,aAAO,CAC9B;AAAA,WACIC,kBAAU,GACLG,KADL,CACW,UAAAE,CAAC;AAAA,aAAIA,CAAC,GAAGjB,SAAR;AAAA,KADZ,EAEKa,MAFL,CAEYA,MAFZ,EAGKK,KAHL,CAGWmD,yBAHX,CADJ;AAAA,GAD8B,EAM9B,CAACrE,SAAD,EAAYa,MAAZ,CAN8B,CAAlC;AASA,MAAMyD,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEnB,IAAAA,MAAM,EAAEc;AAAV,GAAX,EAAmC,UAACnD,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAV;AAAA,GAAnC,CAAf;AACA,MAAMM,YAAY,GAAGC,oBAAe,CAAC4C,kBAAkB,CAACE,MAAD,CAAnB,CAApC;AAEA,SACItC,eAACC,YAAD,CAAU,IAAV;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,CAAC,EAAEV;AAFP,KAGSjB,KAAK,CAAC0D,IAAN,CAAWC,IAHpB,EADJ;AAOH,CAtBD;;AA+BO,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,QAGA;AAAA,MAF3BC,KAE2B,SAF3BA,KAE2B;AAAA,MADxBC,KACwB;;AAC3B,SAAOD,KAAK,KAAK,UAAV,GACH1C,eAAC,sBAAD;AAAwB,IAAA,MAAM,EAAE2C,KAAK,CAAC9D;AAAtC,IADG,GAGHmB,eAAC,oBAAD,qBAA0B2C,KAA1B,EAHJ;AAKH,CATM;;AClDA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAQA;AAAA,MAPrBpC,OAOqB,QAPrBA,OAOqB;AAAA,MANrBqC,MAMqB,QANrBA,MAMqB;AAAA,MALrBH,KAKqB,QALrBA,KAKqB;AAAA,MAJrB7D,MAIqB,QAJrBA,MAIqB;AAAA,MAHrBb,SAGqB,QAHrBA,SAGqB;AAAA,MAFrB0C,KAEqB,QAFrBA,KAEqB;AAAA,MADrBC,WACqB,QADrBA,WACqB;AACrB,MAAMrC,KAAK,GAAGC,aAAQ,EAAtB;;AADqB,iBAEKI,aAAO,CAAC,YAAM;AACpC,WAAO;AACHmE,MAAAA,KAAK,EAAEP,KAAK,CAACC,IAAN,CAAW;AAAEnB,QAAAA,MAAM,EAAEwB;AAAV,OAAX,EACFpD,GADE,CACE,UAACT,CAAD,EAAIC,CAAJ;AAAA,eAAWJ,MAAM,GAAGgE,MAAV,IAAqB5D,CAAC,GAAG,CAAzB,CAAV;AAAA,OADF,EAEF8D,OAFE,EADJ;AAIHxC,MAAAA,MAAM,EAAEgC,KAAK,CAACC,IAAN,CAAW;AAAEnB,QAAAA,MAAM,EAAEb,OAAO,CAACa;AAAlB,OAAX,EAAuC,UAACrC,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAC,GAAGjB,SAAJ,GAAgB8D,IAAI,CAACkB,EAAL,GAAU,CAApC;AAAA,OAAvC;AAJL,KAAP;AAMH,GAPgC,EAO9B,CAACxC,OAAD,EAAUqC,MAAV,EAAkBhE,MAAlB,EAA0Bb,SAA1B,CAP8B,CAFZ;AAAA,MAEb8E,KAFa,YAEbA,KAFa;AAAA,MAENvC,MAFM,YAENA,MAFM;;AAWrB,SACI0C;AAAA,eACK1C,MAAM,CAACd,GAAP,CAAW,UAACV,KAAD,EAAQE,CAAR,EAAc;AACtB,UAAM6B,QAAQ,GAAGC,sBAAiB,CAAChC,KAAD,EAAQF,MAAR,CAAlC;AACA,aACImB;AAEI,QAAA,EAAE,EAAE,CAFR;AAGI,QAAA,EAAE,EAAE,CAHR;AAII,QAAA,EAAE,EAAEc,QAAQ,CAACS,CAJjB;AAKI,QAAA,EAAE,EAAET,QAAQ,CAACU;AALjB,SAMSlD,KAAK,CAAC0D,IAAN,CAAWC,IANpB,kBACiBhD,CADjB,EADJ;AAUH,KAZA,CADL,EAcK6D,KAAK,CAACrD,GAAN,CAAU,UAACZ,MAAD,EAASI,CAAT;AAAA,aACPe,eAAC,eAAD;AAEI,QAAA,KAAK,EAAE0C,KAFX;AAGI,QAAA,MAAM,EAAE7D,MAHZ;AAII,QAAA,SAAS,EAAEb,SAJf;AAKI,QAAA,UAAU,EAAEwC,OAAO,CAACa;AALxB,yBACkBpC,CADlB,EADO;AAAA,KAAV,CAdL,EAuBIe,eAAC,eAAD;AACI,MAAA,MAAM,EAAEnB,MADZ;AAEI,MAAA,MAAM,EAAE0B,MAFZ;AAGI,MAAA,OAAO,EAAEC,OAHb;AAII,MAAA,WAAW,EAAEG,WAJjB;AAKI,MAAA,KAAK,EAAED;AALX,MAvBJ;AAAA,IADJ;AAiCH,CApDM;;AChBQ,SAAS,eAAe,CAAC,GAAG,EAAE;AAC7C,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC;AACrC;;ACFe,SAAS,qBAAqB,CAAC,GAAG,EAAE,CAAC,EAAE;AACtD,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO;AACjF,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC;AAChB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AAChB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;AACjB,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;AAErB,EAAE,IAAI;AACN,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE;AACxF,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AAE1B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;AACxC,KAAK;AACL,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,EAAE,GAAG,IAAI,CAAC;AACd,IAAI,EAAE,GAAG,GAAG,CAAC;AACb,GAAG,SAAS;AACZ,IAAI,IAAI;AACR,MAAM,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;AACtD,KAAK,SAAS;AACd,MAAM,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC;AACvB,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACzBe,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE;AACpD,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AAExD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACvD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACPe,SAAS,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE;AAC/D,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO;AACjB,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,OAAOwC,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAChE,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,EAAE,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;AAC9D,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,EAAE,IAAI,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAClH;;ACRe,SAAS,gBAAgB,GAAG;AAC3C,EAAE,MAAM,IAAI,SAAS,CAAC,2IAA2I,CAAC,CAAC;AACnK;;ACEe,SAAS,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE;AAC/C,EAAE,OAAOC,eAAc,CAAC,GAAG,CAAC,IAAIC,qBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,2BAA0B,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,gBAAe,EAAE,CAAC;AACxH;;ACaO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAWA;AAAA,MAVtBC,KAUsB,QAVtBA,KAUsB;AAAA,MATtBC,IASsB,QATtBA,IASsB;AAAA,MARtB5C,KAQsB,QARtBA,KAQsB;AAAA,MAPtB6C,WAOsB,QAPtBA,WAOsB;AAAA,MANtB5F,UAMsB,QANtBA,UAMsB;AAAA,MALtBe,MAKsB,QALtBA,MAKsB;AAAA,MAJtB8E,UAIsB,QAJtBA,UAIsB;AAAA,MAHtBC,QAGsB,QAHtBA,QAGsB;AAAA,MAFtBC,YAEsB,QAFtBA,YAEsB;AAAA,MADtBC,SACsB,QADtBA,OACsB;;AAAA,kBACQC,cAAQ,CAAC,KAAD,CADhB;AAAA;AAAA,MACfC,OADe;AAAA,MACNC,UADM;;AAEtB,MAAM3F,KAAK,GAAGC,aAAQ,EAAtB;;AAFsB,oBAGwB2F,kBAAU,EAHlC;AAAA,MAGdC,oBAHc,eAGdA,oBAHc;AAAA,MAGQC,WAHR,eAGQA,WAHR;;AAKtB,MAAMC,WAAW,GAAG1F,aAAO,CAAC,YAAM;AAC9B,QAAMhB,IAA8B,GAAG8F,IAAI,CAAChE,GAAL,CAAS,UAAA7B,GAAG;AAAA,aAAK;AACpDkC,QAAAA,KAAK,EAAEhC,UAAU,CAACF,GAAD,CADmC;AAEpDqD,QAAAA,EAAE,EAAErD,GAFgD;AAGpDiE,QAAAA,KAAK,EAAE2B,KAAK,CAAC5F,GAAD,CAHwC;AAIpD0G,QAAAA,cAAc,EAAEZ,WAAW,CAACF,KAAK,CAAC5F,GAAD,CAAN,EAAuBA,GAAvB;AAJyB,OAAL;AAAA,KAAZ,CAAvC;AAMAD,IAAAA,IAAI,CAAC4G,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,CAAC3C,KAAF,GAAU4C,CAAC,CAAC5C,KAAtB;AAAA,KAAV;AACAlE,IAAAA,IAAI,CAACoF,OAAL;AAEA,WAAOpF,IAAP;AACH,GAX0B,EAWxB,CAAC6F,KAAD,EAAQC,IAAR,EAAcC,WAAd,EAA2B5F,UAA3B,CAXwB,CAA3B;AAaA,MAAM4G,eAAe,GAAGC,iBAAW,CAC/B,UAAAC,KAAK,EAAI;AACLX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,oBAAoB,CAChB1C,mBAAa,CAACqC,SAAD,EAAU;AACnBjD,MAAAA,KAAK,EAALA,KADmB;AAEnBlD,MAAAA,IAAI,EAAE0G;AAFa,KAAV,CADG,EAKhBO,KALgB,CAApB;AAOH,GAV8B,EAW/B,CAACT,oBAAD,EAAuBL,SAAvB,EAAgCjD,KAAhC,EAAuCwD,WAAvC,CAX+B,CAAnC;AAcA,MAAMQ,eAAe,GAAGF,iBAAW,CAAC,YAAM;AACtCV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,IAAAA,WAAW;AACd,GAHkC,EAGhC,CAACA,WAAD,EAAcH,UAAd,CAHgC,CAAnC;;AAhCsB,iBAqCOtF,aAAO,CAAC,YAAM;AACvC,QAAMmC,QAAQ,GAAGC,sBAAiB,CAC9B4C,UAAU,GAAG,CAACC,QAAQ,GAAGD,UAAZ,IAA0B,GAAvC,GAA6C7B,IAAI,CAACkB,EAAL,GAAU,CADzB,EAE9BnE,MAF8B,CAAlC;AAKA,WAAO;AACHiG,MAAAA,IAAI,EAAEjB,YAAY,CAAC;AAAEF,QAAAA,UAAU,EAAVA,UAAF;AAAcC,QAAAA,QAAQ,EAARA;AAAd,OAAD,CADf;AAEHmB,MAAAA,IAAI,EAAEjE,QAAQ,CAACS,CAFZ;AAGHyD,MAAAA,IAAI,EAAElE,QAAQ,CAACU;AAHZ,KAAP;AAKH,GAXmC,EAWjC,CAACmC,UAAD,EAAaC,QAAb,EAAuB/E,MAAvB,EAA+BgF,YAA/B,CAXiC,CArCd;AAAA,MAqCdiB,IArCc,YAqCdA,IArCc;AAAA,MAqCRC,IArCQ,YAqCRA,IArCQ;AAAA,MAqCFC,IArCE,YAqCFA,IArCE;;AAkDtB,SACI/B;AAAA,eACKe,OAAO,IAAIhE;AAAM,MAAA,EAAE,EAAE,CAAV;AAAa,MAAA,EAAE,EAAE,CAAjB;AAAoB,MAAA,EAAE,EAAE+E,IAAxB;AAA8B,MAAA,EAAE,EAAEC,IAAlC;AAAwC,MAAA,KAAK,EAAE1G,KAAK,CAAC2G,SAAN,CAAgBhD;AAA/D,MADhB,EAEIjC;AACI,MAAA,CAAC,EAAE8E,IADP;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,WAAW,EAAE,CAHjB;AAII,MAAA,YAAY,EAAEJ,eAJlB;AAKI,MAAA,WAAW,EAAEA,eALjB;AAMI,MAAA,YAAY,EAAEG;AANlB,MAFJ;AAAA,IADJ;AAaH,CA1EM;;ACJA,IAAMK,WAAW,GAAG,SAAdA,WAAc,OASA;AAAA,MARvBvH,IAQuB,QARvBA,IAQuB;AAAA,MAPvB8F,IAOuB,QAPvBA,IAOuB;AAAA,MANvB0B,QAMuB,QANvBA,QAMuB;AAAA,MALvBzB,WAKuB,QALvBA,WAKuB;AAAA,MAJvB5F,UAIuB,QAJvBA,UAIuB;AAAA,MAHvBe,MAGuB,QAHvBA,MAGuB;AAAA,MAFvBb,SAEuB,QAFvBA,SAEuB;AAAA,MADvB8F,OACuB,QADvBA,OACuB;AACvB,MAAMsB,GAAG,GAAGC,WAAK,GAA6CC,WAAlD,CAA8DzG,MAA9D,EAAsE0G,WAAtE,CAAkF,CAAlF,CAAZ;AAEA,MAAMC,aAAa,GAAGxH,SAAS,GAAG,GAAlC;AACA,MAAIyH,cAAc,GAAG,CAACD,aAAtB;AAEA,SACIxF;AAAA,cACKrC,IAAI,CAAC8B,GAAL,CAAS,UAAAX,CAAC,EAAI;AACX,UAAM+B,KAAK,GAAGsE,QAAQ,CAACrG,CAAD,CAAtB;AACA,UAAM6E,UAAU,GAAG8B,cAAnB;AACA,UAAM7B,QAAQ,GAAGD,UAAU,GAAG3F,SAA9B;AAEAyH,MAAAA,cAAc,IAAIzH,SAAlB;AAEA,aACIgC,eAAC,UAAD;AAEI,QAAA,KAAK,EAAElB,CAFX;AAGI,QAAA,IAAI,EAAE2E,IAHV;AAII,QAAA,KAAK,EAAE5C,KAJX;AAKI,QAAA,WAAW,EAAE6C,WALjB;AAMI,QAAA,UAAU,EAAE5F,UANhB;AAOI,QAAA,UAAU,EAAE6F,UAPhB;AAQI,QAAA,QAAQ,EAAEC,QARd;AASI,QAAA,MAAM,EAAE/E,MATZ;AAUI,QAAA,YAAY,EAAEuG,GAVlB;AAWI,QAAA,OAAO,EAAEtB;AAXb,SACSjD,KADT,CADJ;AAeH,KAtBA;AADL,IADJ;AA2BH,CA1CM;;ICSM6E,SAAS,GAAG,SAAZA,SAAY,OAgBA;AAAA,MAfrB/H,IAeqB,QAfrBA,IAeqB;AAAA,MAdrB8F,IAcqB,QAdrBA,IAcqB;AAAA,MAbrB0B,QAaqB,QAbrBA,QAaqB;AAAA,MAZrBrH,UAYqB,QAZrBA,UAYqB;AAAA,MAXrBC,WAWqB,QAXrBA,WAWqB;AAAA,MAVrBC,SAUqB,QAVrBA,SAUqB;AAAA,MATrB2H,MASqB,QATrBA,MASqB;AAAA,uBARrBC,IAQqB;AAAA,MARrBA,IAQqB,0BARd,CAQc;AAAA,wBAPrB9F,KAOqB;AAAA,MAPrBA,KAOqB,2BAPb;AAAE0C,IAAAA,IAAI,EAAE;AAAR,GAOa;AAAA,8BANrBtE,WAMqB;AAAA,MANrBA,WAMqB,iCANP,CAMO;AAAA,8BALrBC,WAKqB;AAAA,MALrBA,WAKqB,iCALP;AAAEqE,IAAAA,IAAI,EAAE;AAAR,GAKO;AAAA,8BAJrBqD,WAIqB;AAAA,MAJrBA,WAIqB,iCAJP,KAIO;AAAA,wBAHrBnF,KAGqB;AAAA,MAHrBA,KAGqB,2BAHb,OAGa;AAAA,MAFrBgD,WAEqB,QAFrBA,WAEqB;AAAA,MADrBoC,YACqB,QADrBA,YACqB;AACrB,MAAMxH,KAAK,GAAGC,aAAQ,EAAtB;AACA,MAAMwH,SAAS,GAAGC,iCAA0B,CAAClG,KAAD,EAAQxB,KAAR,CAA5C;AACA,MAAM2H,WAAW,GAAGD,iCAA0B,CAAC7H,WAAD,EAAcG,KAAd,CAA9C;AACA,MAAM4H,QAAQ,GAAGC,wBAAmB,CAA6BzF,KAA7B,CAApC;AAEA,MAAM4B,MAAoB,GAAG3D,aAAO,CAChC;AAAA,WACIhB,IAAI,CAACyI,MAAL,CAAY,UAACC,GAAD,EAAM7C,KAAN,EAAavE,CAAb,EAAmB;AAC3B,UAAM4B,KAAK,GAAGsE,QAAQ,CAAC3B,KAAD,CAAtB;AACAC,MAAAA,IAAI,CAAC6C,OAAL,CAAa,UAAA1I,GAAG,EAAI;AAChB,YAAMiE,KAAK,GAAG2B,KAAK,CAAC5F,GAAD,CAAnB;AAEA,YAAM2I,SAAoB,GAAG;AACzB1F,UAAAA,KAAK,EAALA,KADyB;AAEzBjD,UAAAA,GAAG,EAAHA,GAFyB;AAGzBiE,UAAAA,KAAK,EAALA,KAHyB;AAIzByC,UAAAA,cAAc,EAAEZ,WAAW,CAAC7B,KAAD,EAAQjE,GAAR,CAJF;AAKzBkC,UAAAA,KAAK,EAAEhC,UAAU,CAACF,GAAD;AALQ,SAA7B;AAQAyI,QAAAA,GAAG,CAACG,IAAJ,CAAS;AACL5I,UAAAA,GAAG,YAAKA,GAAL,cAAYiD,KAAZ,CADE;AAELH,UAAAA,KAAK,EAAEmF,WAAW,GAAGK,QAAQ,CAACK,SAAD,CAAX,GAAyBE,SAFtC;AAGLC,UAAAA,KAAK;AACD9G,YAAAA,IAAI,EAAEmG,SAAS,CAACQ,SAAD,CADd;AAED1G,YAAAA,MAAM,EAAEoG,WAAW,CAACM,SAAD;AAFlB,aAGExF,sBAAiB,CAChB/C,SAAS,GAAGiB,CAAZ,GAAgB6C,IAAI,CAACkB,EAAL,GAAU,CADV,EAEhBjF,WAAW,CAACyF,KAAK,CAAC5F,GAAD,CAAN,CAFK,CAHnB,CAHA;AAWLD,UAAAA,IAAI,EAAE4I;AAXD,SAAT;AAaH,OAxBD;AA0BA,aAAOF,GAAP;AACH,KA7BD,EA6BG,EA7BH,CADJ;AAAA,GADgC,EAgChC,CACI1I,IADJ,EAEI8F,IAFJ,EAGI0B,QAHJ,EAIIrH,UAJJ,EAKI+H,WALJ,EAMIK,QANJ,EAOIxC,WAPJ,EAQIqC,SARJ,EASIE,WATJ,EAUIjI,SAVJ,EAWID,WAXJ,CAhCgC,CAApC;AA+CA,SACIiC;AAAA,cACKsC,MAAM,CAAC7C,GAAP,CAAW,UAAAkH,KAAK;AAAA,aACb3G,eAAC4G,aAAD;AAEI,QAAA,CAAC,EAAED,KAAK,CAACD,KAAN,CAAYnF,CAFnB;AAGI,QAAA,CAAC,EAAEoF,KAAK,CAACD,KAAN,CAAYlF,CAHnB;AAII,QAAA,MAAM,EAAEmE,MAJZ;AAKI,QAAA,IAAI,EAAEC,IALV;AAMI,QAAA,KAAK,EAAEe,KAAK,CAACD,KAAN,CAAY9G,IANvB;AAOI,QAAA,WAAW,EAAE1B,WAPjB;AAQI,QAAA,WAAW,EAAEyI,KAAK,CAACD,KAAN,CAAY7G,MAR7B;AASI,QAAA,KAAK,EAAE8G,KAAK,CAACjG,KATjB;AAUI,QAAA,YAAY,EAAEoF,YAVlB;AAWI,QAAA,KAAK,EAAEa,KAAK,CAAChJ;AAXjB,SACSgJ,KAAK,CAAC/I,GADf,CADa;AAAA,KAAhB;AADL,IADJ;AAmBH;;AC5GM,IAAMiJ,cAAc,GAAG,SAAjBA,cAAiB,OAA6D;AAAA,MAA1D5F,EAA0D,QAA1DA,EAA0D;AAAA,MAAtDC,MAAsD,QAAtDA,MAAsD;AAAA,MAApCxB,aAAoC,QAA9CO,QAA8C;AACvF,MAAM3B,KAAK,GAAGC,aAAQ,EAAtB;AAEA,SACIyB,eAACC,YAAD,CAAU,CAAV;AAAY,IAAA,SAAS,EAAEP,aAAa,CAAC4B,SAArC;AAAA,cACItB;AAAM,MAAA,KAAK,EAAE1B,KAAK,CAACwI,IAAN,CAAWC,KAAX,CAAiBC,IAA9B;AAAoC,MAAA,gBAAgB,EAAC,SAArD;AAA+D,MAAA,UAAU,EAAE9F,MAA3E;AAAA,gBACKD;AADL;AADJ,IADJ;AAOH,CAVM;;ACAA,IAAMgG,iBAAiB,GAAG,SAApBA,iBAAoB,OAA6C;AAAA,MAA1CpG,KAA0C,QAA1CA,KAA0C;AAAA,MAAnClD,IAAmC,QAAnCA,IAAmC;AAC1E,MAAMuJ,IAAI,GAAGvI,aAAO,CAChB;AAAA,WACIhB,IAAI,CAAC8B,GAAL,CAAS,UAAA+D,KAAK;AAAA,aAAI,CACdxD,eAACmH,YAAD;AAAqB,QAAA,KAAK,EAAE3D,KAAK,CAAC1D;AAAlC,SAAW0D,KAAK,CAACvC,EAAjB,CADc,EAEduC,KAAK,CAACvC,EAFQ,EAGduC,KAAK,CAACc,cAHQ,CAAJ;AAAA,KAAd,CADJ;AAAA,GADgB,EAOhB,CAAC3G,IAAD,CAPgB,CAApB;AAUA,SAAOqC,eAACoH,oBAAD;AAAc,IAAA,KAAK,EAAEpH;AAAA,gBAASa;AAAT,MAArB;AAA+C,IAAA,IAAI,EAAEqG;AAArD,IAAP;AACH,CAZM;;ICAMG,eAAe,GAAG;AAC3BC,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,MAA7B,EAAqC,SAArC,CADmB;AAG3BC,EAAAA,QAAQ,EAAE,MAHiB;AAK3BrI,EAAAA,KAAK,EAAE,cALoB;AAO3BhB,EAAAA,WAAW,EAAE,CAPc;AAQ3BC,EAAAA,WAAW,EAAE;AAAEqE,IAAAA,IAAI,EAAE;AAAR,GARc;AAU3BgF,EAAAA,UAAU,EAAE,CAVe;AAW3BC,EAAAA,SAAS,EAAE,UAXgB;AAY3BC,EAAAA,eAAe,EAAE,EAZU;AAa3BC,EAAAA,SAAS,EAAEd,cAbgB;AAe3Be,EAAAA,UAAU,EAAE,IAfe;AAgB3BC,EAAAA,OAAO,EAAE,CAhBkB;AAiB3BC,EAAAA,QAAQ,EAAE;AAAEtF,IAAAA,IAAI,EAAE;AAAR,GAjBiB;AAkB3BuF,EAAAA,cAAc,EAAE,CAlBW;AAmB3BC,EAAAA,cAAc,EAAE;AAAExF,IAAAA,IAAI,EAAE;AAAR,GAnBW;AAoB3ByF,EAAAA,cAAc,EAAE,KApBW;AAqB3BC,EAAAA,QAAQ,EAAE,gBArBiB;AAsB3BC,EAAAA,eAAe,EAAE,CAAC,EAtBS;AAwB3BC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAxBmB;AAyB3BjK,EAAAA,WAAW,EAAE,IAzBc;AA0B3BC,EAAAA,SAAS,EAAE,QA1BgB;AA4B3BiK,EAAAA,aAAa,EAAE,IA5BY;AA6B3BC,EAAAA,YAAY,EAAEtB,iBA7Ba;AA+B3BuB,EAAAA,OAAO,EAAE,EA/BkB;AAgC3BC,EAAAA,IAAI,EAAE,KAhCqB;AAkC3BrJ,EAAAA,OAAO,EAAE,IAlCkB;AAmC3BsJ,EAAAA,YAAY,EAAE;AAnCa;;ACHhB,SAAS,kBAAkB,CAAC,GAAG,EAAE;AAChD,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAOxF,iBAAgB,CAAC,GAAG,CAAC,CAAC;AACvD;;ACHe,SAAS,gBAAgB,CAAC,IAAI,EAAE;AAC/C,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChG;;ACFe,SAAS,kBAAkB,GAAG;AAC7C,EAAE,MAAM,IAAI,SAAS,CAAC,sIAAsI,CAAC,CAAC;AAC9J;;ACEe,SAAS,kBAAkB,CAAC,GAAG,EAAE;AAChD,EAAE,OAAOyF,kBAAiB,CAAC,GAAG,CAAC,IAAIC,gBAAe,CAAC,GAAG,CAAC,IAAIvF,2BAA0B,CAAC,GAAG,CAAC,IAAIwF,kBAAiB,EAAE,CAAC;AAClH;;ACOO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAsBlB;AAAA,MArBFnL,IAqBE,QArBFA,IAqBE;AAAA,MApBF8F,IAoBE,QApBFA,IAoBE;AAAA,MAnBFsF,OAmBE,QAnBFA,OAmBE;AAAA,MAlBFxB,QAkBE,QAlBFA,QAkBE;AAAA,MAjBFyB,WAiBE,QAjBFA,WAiBE;AAAA,MAhBF9J,KAgBE,QAhBFA,KAgBE;AAAA,MAfF+J,KAeE,QAfFA,KAeE;AAAA,MAdFC,MAcE,QAdFA,MAcE;AAAA,yBAbFd,MAaE;AAAA,MAbFA,QAaE,4BAbOf,eAAe,CAACe,MAavB;AAAA,MAZFI,OAYE,QAZFA,OAYE;AACF,MAAMrD,QAAQ,GAAGgB,wBAAmB,CAAY4C,OAAZ,CAApC;AACA,MAAMvI,OAAO,GAAG7B,aAAO,CAAC;AAAA,WAAMhB,IAAI,CAAC8B,GAAL,CAAS0F,QAAT,CAAN;AAAA,GAAD,EAA2B,CAACxH,IAAD,EAAOwH,QAAP,CAA3B,CAAvB;AACA,MAAMzB,WAAW,GAAGyF,sBAAiB,CAAiBH,WAAjB,CAArC;AAEA,MAAMI,QAAQ,GAAGC,2BAAoB,CAAiCjB,QAAjC,EAAyC,KAAzC,CAArC;AACA,MAAMtK,UAA6B,GAAGa,aAAO,CACzC;AAAA,WACI8E,IAAI,CAAC2C,MAAL,CAA+B,UAACkD,OAAD,EAAU1L,GAAV,EAAeiD,KAAf,EAAyB;AACpDyI,MAAAA,OAAO,CAAC1L,GAAD,CAAP,GAAewL,QAAQ,CAAC;AAAExL,QAAAA,GAAG,EAAHA,GAAF;AAAOiD,QAAAA,KAAK,EAALA;AAAP,OAAD,CAAvB;AACA,aAAOyI,OAAP;AACH,KAHD,EAGG,EAHH,CADJ;AAAA,GADyC,EAMzC,CAAC7F,IAAD,EAAO2F,QAAP,CANyC,CAA7C;;AANE,iBAe2DzK,aAAO,CAAC,YAAM;AACvE,QAAM4K,SAAmB,GAAG5L,IAAI,CAACyI,MAAL,CACxB,UAACC,GAAD,EAAgBvH,CAAhB;AAAA,0CAA0BuH,GAA1B,sBAAkC5C,IAAI,CAAChE,GAAL,CAAS,UAAA7B,GAAG;AAAA,eAAIkB,CAAC,CAAClB,GAAD,CAAL;AAAA,OAAZ,CAAlC;AAAA,KADwB,EAExB,EAFwB,CAA5B;AAIA,QAAM4L,gBAAgB,GAAGjC,QAAQ,KAAK,MAAb,GAAsBA,QAAtB,GAAiCzF,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQyH,SAAR,EAA9D;AAEA,QAAM1K,MAAM,GAAGiD,IAAI,CAAC2H,GAAL,CAASR,KAAT,EAAgBC,MAAhB,IAA0B,CAAzC;AACA,QAAMnL,WAAW,GAAG2L,mBAAW,GAC1BC,KADe,CACT,CAAC,CAAD,EAAI9K,MAAJ,CADS,EAEf+K,MAFe,CAER,CAAC,CAAD,EAAIJ,gBAAJ,CAFQ,CAApB;AAIA,WAAO;AACH3K,MAAAA,MAAM,EAANA,MADG;AAEHd,MAAAA,WAAW,EAAXA,WAFG;AAGH8L,MAAAA,OAAO,EAAEZ,KAAK,GAAG,CAHd;AAIHa,MAAAA,OAAO,EAAEZ,MAAM,GAAG,CAJf;AAKHlL,MAAAA,SAAS,EAAG8D,IAAI,CAACkB,EAAL,GAAU,CAAX,GAAgBrF,IAAI,CAAC0D;AAL7B,KAAP;AAOH,GAnBmE,EAmBjE,CAACoC,IAAD,EAAO9F,IAAP,EAAa4J,QAAb,EAAuB0B,KAAvB,EAA8BC,MAA9B,CAnBiE,CAflE;AAAA,MAeMrK,MAfN,YAeMA,MAfN;AAAA,MAecd,WAfd,YAecA,WAfd;AAAA,MAe2B8L,OAf3B,YAe2BA,OAf3B;AAAA,MAeoCC,OAfpC,YAeoCA,OAfpC;AAAA,MAe6C9L,SAf7C,YAe6CA,SAf7C;;AAoCF,MAAMC,YAAY,GAAG8L,0BAAqB,CAAC7K,KAAD,CAA1C;AAEA,MAAM8K,gBAA0C,GAAGrL,aAAO,CACtD;AAAA,WAAO;AACHhB,MAAAA,IAAI,EAAJA,IADG;AAEH8F,MAAAA,IAAI,EAAJA,IAFG;AAGHjD,MAAAA,OAAO,EAAPA,OAHG;AAIH1C,MAAAA,UAAU,EAAVA,UAJG;AAKH+L,MAAAA,OAAO,EAAPA,OALG;AAMHC,MAAAA,OAAO,EAAPA,OANG;AAOH/L,MAAAA,WAAW,EAAXA,WAPG;AAQHC,MAAAA,SAAS,EAATA;AARG,KAAP;AAAA,GADsD,EAWtD,CAACL,IAAD,EAAO8F,IAAP,EAAajD,OAAb,EAAsB1C,UAAtB,EAAkC+L,OAAlC,EAA2CC,OAA3C,EAAoD/L,WAApD,EAAiEC,SAAjE,CAXsD,CAA1D;AAcA,MAAMiM,UAAU,GAAGtL,aAAO,CACtB;AAAA,WAAM8E,IAAI,CAAChE,GAAL,CAAS,UAAA7B,GAAG;AAAA,aAAK;AAAEqD,QAAAA,EAAE,EAAErD,GAAN;AAAW8C,QAAAA,KAAK,EAAE9C,GAAlB;AAAuBkC,QAAAA,KAAK,EAAEhC,UAAU,CAACF,GAAD;AAAxC,OAAL;AAAA,KAAZ,CAAN;AAAA,GADsB,EAEtB,CAAC6F,IAAD,EAAO3F,UAAP,CAFsB,CAA1B;AAKA,MAAMoM,YAAgC,GAAGvL,aAAO,CAC5C;AAAA,WACI6J,OAAO,CAAC/I,GAAR,CAAY,iBAAqC;AAAA,UAA5B0K,UAA4B,SAAlCxM,IAAkC;AAAA,UAAbyM,MAAa;;AAC7C,UAAMC,SAAS,GAAGF,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAE1K,GAAZ,CAAgB,UAAA6K,EAAE,EAAI;AACpC,YAAMC,QAAQ,GAAGN,UAAU,CAACO,IAAX,CAAgB,UAAAC,EAAE;AAAA,iBAAIA,EAAE,CAACxJ,EAAH,KAAUqJ,EAAE,CAACrJ,EAAjB;AAAA,SAAlB,KAA0C,EAA3D;AACA,iDAAYsJ,QAAZ,GAAyBD,EAAzB;AACH,OAHiB,CAAlB;AAIA,+CAAYF,MAAZ;AAAoBzM,QAAAA,IAAI,EAAE0M,SAAS,IAAIJ;AAAvC;AACH,KAND,CADJ;AAAA,GAD4C,EAS5C,CAACzB,OAAD,EAAUyB,UAAV,CAT4C,CAAhD;AAYA,SAAO;AACH9E,IAAAA,QAAQ,EAARA,QADG;AAEH3E,IAAAA,OAAO,EAAPA,OAFG;AAGHkD,IAAAA,WAAW,EAAXA,WAHG;AAIH5F,IAAAA,UAAU,EAAVA,UAJG;AAKHe,IAAAA,MAAM,EAANA,MALG;AAMHd,IAAAA,WAAW,EAAXA,WANG;AAOH8L,IAAAA,OAAO,EAAPA,OAPG;AAQHC,IAAAA,OAAO,EAAPA,OARG;AASH9L,IAAAA,SAAS,EAATA,SATG;AAUHC,IAAAA,YAAY,EAAZA,YAVG;AAWHgM,IAAAA,UAAU,EAAVA,UAXG;AAYHC,IAAAA,YAAY,EAAZA,YAZG;AAaHF,IAAAA,gBAAgB,EAAhBA;AAbG,GAAP;AAeH,CA1GM;;ACGP,IAAMU,UAAU,GAAG,SAAbA,UAAa,OAoCO;AAAA,MAnCtB/M,IAmCsB,QAnCtBA,IAmCsB;AAAA,MAlCtB8F,IAkCsB,QAlCtBA,IAkCsB;AAAA,MAjCtBsF,OAiCsB,QAjCtBA,OAiCsB;AAAA,yBAhCtBzB,MAgCsB;AAAA,MAhCtBA,MAgCsB,4BAhCbD,eAAe,CAACC,MAgCH;AAAA,2BA/BtBC,QA+BsB;AAAA,MA/BtBA,QA+BsB,8BA/BXF,eAAe,CAACE,QA+BL;AAAA,MA9BtByB,WA8BsB,QA9BtBA,WA8BsB;AAAA,wBA7BtB9J,KA6BsB;AAAA,MA7BtBA,KA6BsB,2BA7BdmI,eAAe,CAACnI,KA6BF;AAAA,MA5BdyL,aA4Bc,QA5BtBC,MA4BsB;AAAA,MA3BtB3B,KA2BsB,QA3BtBA,KA2BsB;AAAA,MA1BtBC,MA0BsB,QA1BtBA,MA0BsB;AAAA,8BAzBtBhL,WAyBsB;AAAA,MAzBtBA,WAyBsB,iCAzBRmJ,eAAe,CAACnJ,WAyBR;AAAA,8BAxBtBC,WAwBsB;AAAA,MAxBtBA,WAwBsB,iCAxBRkJ,eAAe,CAAClJ,WAwBR;AAAA,6BAvBtBqJ,UAuBsB;AAAA,MAvBtBA,UAuBsB,gCAvBTH,eAAe,CAACG,UAuBP;AAAA,4BAtBtBC,SAsBsB;AAAA,MAtBtBA,SAsBsB,+BAtBVJ,eAAe,CAACI,SAsBN;AAAA,4BArBtBE,SAqBsB;AAAA,MArBtBA,SAqBsB,+BArBVN,eAAe,CAACM,SAqBN;AAAA,kCApBtBD,eAoBsB;AAAA,MApBtBA,eAoBsB,qCApBJL,eAAe,CAACK,eAoBZ;AAAA,6BAnBtBE,UAmBsB;AAAA,MAnBtBA,UAmBsB,gCAnBTP,eAAe,CAACO,UAmBP;AAAA,MAlBtBiD,SAkBsB,QAlBtBA,SAkBsB;AAAA,0BAjBtBhD,OAiBsB;AAAA,MAjBtBA,OAiBsB,6BAjBZR,eAAe,CAACQ,OAiBJ;AAAA,2BAhBtBC,QAgBsB;AAAA,MAhBtBA,QAgBsB,8BAhBXT,eAAe,CAACS,QAgBL;AAAA,iCAftBC,cAesB;AAAA,MAftBA,cAesB,oCAfLV,eAAe,CAACU,cAeX;AAAA,iCAdtBC,cAcsB;AAAA,MAdtBA,cAcsB,oCAdLX,eAAe,CAACW,cAcX;AAAA,iCAbtBC,cAasB;AAAA,MAbtBA,cAasB,oCAbLZ,eAAe,CAACY,cAaX;AAAA,2BAZtBC,QAYsB;AAAA,MAZtBA,QAYsB,8BAZXb,eAAe,CAACa,QAYL;AAAA,kCAXtBC,eAWsB;AAAA,MAXtBA,eAWsB,qCAXJd,eAAe,CAACc,eAWZ;AAAA,yBAVtBC,MAUsB;AAAA,MAVtBA,MAUsB,4BAVbf,eAAe,CAACe,MAUH;AAAA,8BATtBhK,WASsB;AAAA,MATtBA,WASsB,iCATRiJ,eAAe,CAACjJ,WASR;AAAA,4BARtBC,SAQsB;AAAA,MARtBA,SAQsB,+BARVgJ,eAAe,CAAChJ,SAQN;AAAA,gCAPtBiK,aAOsB;AAAA,MAPtBA,aAOsB,mCAPNjB,eAAe,CAACiB,aAOV;AAAA,+BANtBC,YAMsB;AAAA,MANtBA,YAMsB,kCANPlB,eAAe,CAACkB,YAMT;AAAA,0BALtBC,OAKsB;AAAA,MALtBA,SAKsB,6BALZnB,eAAe,CAACmB,OAKJ;AAAA,MAJtBC,IAIsB,QAJtBA,IAIsB;AAAA,MAHtBqC,SAGsB,QAHtBA,SAGsB;AAAA,MAFtBC,cAEsB,QAFtBA,cAEsB;AAAA,MADtBC,eACsB,QADtBA,eACsB;;AAAA,uBAC+CC,kBAAa,CAC9EhC,KAD8E,EAE9EC,MAF8E,EAG9EyB,aAH8E,CAD5D;AAAA,MACdC,MADc,kBACdA,MADc;AAAA,MACNM,UADM,kBACNA,UADM;AAAA,MACMC,WADN,kBACMA,WADN;AAAA,MACmBC,UADnB,kBACmBA,UADnB;AAAA,MAC+BC,WAD/B,kBAC+BA,WAD/B;;AAAA,kBAoBlBvC,QAAQ,CAAI;AACZnL,IAAAA,IAAI,EAAJA,IADY;AAEZ8F,IAAAA,IAAI,EAAJA,IAFY;AAGZsF,IAAAA,OAAO,EAAPA,OAHY;AAIZxB,IAAAA,QAAQ,EAARA,QAJY;AAKZyB,IAAAA,WAAW,EAAXA,WALY;AAMZ9J,IAAAA,KAAK,EAALA,KANY;AAOZ+J,IAAAA,KAAK,EAAEiC,UAPK;AAQZhC,IAAAA,MAAM,EAAEiC,WARI;AASZ/C,IAAAA,MAAM,EAANA,MATY;AAUZI,IAAAA,OAAO,EAAPA;AAVY,GAAJ,CApBU;AAAA,MAQlBrD,QARkB,aAQlBA,QARkB;AAAA,MASlB3E,OATkB,aASlBA,OATkB;AAAA,MAUlBkD,WAVkB,aAUlBA,WAVkB;AAAA,MAWlB5F,UAXkB,aAWlBA,UAXkB;AAAA,MAYlBe,MAZkB,aAYlBA,MAZkB;AAAA,MAalBd,WAbkB,aAalBA,WAbkB;AAAA,MAclB8L,OAdkB,aAclBA,OAdkB;AAAA,MAelBC,OAfkB,aAelBA,OAfkB;AAAA,MAgBlB9L,SAhBkB,aAgBlBA,SAhBkB;AAAA,MAiBlBC,YAjBkB,aAiBlBA,YAjBkB;AAAA,MAkBlBiM,YAlBkB,aAkBlBA,YAlBkB;AAAA,MAmBlBF,gBAnBkB,aAmBlBA,gBAnBkB;;AAiCtB,MAAMsB,SAA0C,GAAG;AAC/CtJ,IAAAA,IAAI,EAAE,IADyC;AAE/CsF,IAAAA,MAAM,EAAE,IAFuC;AAG/CiE,IAAAA,MAAM,EAAE,IAHuC;AAI/CC,IAAAA,IAAI,EAAE,IAJyC;AAK/ChD,IAAAA,OAAO,EAAE;AALsC,GAAnD;;AAQA,MAAIlB,MAAM,CAACmE,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AACzBH,IAAAA,SAAS,CAACtJ,IAAV,GACIhC;AAAc,MAAA,SAAS,sBAAe6J,OAAf,eAA2BC,OAA3B,MAAvB;AAAA,gBACI9J,eAAC,SAAD;AACI,QAAA,MAAM,EAAEwH,UADZ;AAEI,QAAA,KAAK,EAAEC,SAFX;AAGI,QAAA,MAAM,EAAE5I,MAHZ;AAII,QAAA,SAAS,EAAEb,SAJf;AAKI,QAAA,OAAO,EAAEwC,OALb;AAMI,QAAA,KAAK,EAAEmH,SANX;AAOI,QAAA,WAAW,EAAED;AAPjB;AADJ,OAAO,MAAP,CADJ;AAaH;;AAED,MAAIJ,MAAM,CAACmE,QAAP,CAAgB,QAAhB,CAAJ,EAA+B;AAC3BH,IAAAA,SAAS,CAAChE,MAAV,GACItH;AAAgB,MAAA,SAAS,sBAAe6J,OAAf,eAA2BC,OAA3B,MAAzB;AAAA,gBACKrG,IAAI,CAAChE,GAAL,CAAS,UAAA7B,GAAG;AAAA,eACToC,eAAC,UAAD;AAEI,UAAA,IAAI,EAAErC,IAFV;AAGI,UAAA,IAAI,EAAEC,GAHV;AAII,UAAA,UAAU,EAAEE,UAJhB;AAKI,UAAA,WAAW,EAAEC,WALjB;AAMI,UAAA,SAAS,EAAEC,SANf;AAOI,UAAA,YAAY,EAAEC,YAPlB;AAQI,UAAA,WAAW,EAAEC,WARjB;AASI,UAAA,WAAW,EAAEC,WATjB;AAUI,UAAA,WAAW,EAAEC,WAVjB;AAWI,UAAA,SAAS,EAAEC;AAXf,WACST,GADT,CADS;AAAA,OAAZ;AADL,OAAO,QAAP,CADJ;AAmBH;;AAED,MAAI0J,MAAM,CAACmE,QAAP,CAAgB,QAAhB,KAA6BnD,aAAjC,EAAgD;AAC5CgD,IAAAA,SAAS,CAACC,MAAV,GACIvL;AAAgB,MAAA,SAAS,sBAAe6J,OAAf,eAA2BC,OAA3B,MAAzB;AAAA,gBACI9J,eAAC,WAAD;AACI,QAAA,IAAI,EAAErC,IADV;AAEI,QAAA,IAAI,EAAE8F,IAFV;AAGI,QAAA,QAAQ,EAAE0B,QAHd;AAII,QAAA,WAAW,EAAEzB,WAJjB;AAKI,QAAA,UAAU,EAAE5F,UALhB;AAMI,QAAA,MAAM,EAAEe,MANZ;AAOI,QAAA,SAAS,EAAEb,SAPf;AAQI,QAAA,OAAO,EAAEuK;AARb;AADJ,OAAO,QAAP,CADJ;AAcH;;AAED,MAAIjB,MAAM,CAACmE,QAAP,CAAgB,MAAhB,KAA2B7D,UAA/B,EAA2C;AACvC0D,IAAAA,SAAS,CAACE,IAAV,GACIxL;AAAc,MAAA,SAAS,sBAAe6J,OAAf,eAA2BC,OAA3B,MAAvB;AAAA,gBACI9J,eAAC,SAAD;AACI,QAAA,IAAI,EAAErC,IADV;AAEI,QAAA,IAAI,EAAE8F,IAFV;AAGI,QAAA,QAAQ,EAAE0B,QAHd;AAII,QAAA,WAAW,EAAEpH,WAJjB;AAKI,QAAA,SAAS,EAAEC,SALf;AAMI,QAAA,MAAM,EAAE6M,SANZ;AAOI,QAAA,IAAI,EAAEhD,OAPV;AAQI,QAAA,UAAU,EAAE/J,UARhB;AASI,QAAA,KAAK,EAAEgK,QATX;AAUI,QAAA,WAAW,EAAEC,cAVjB;AAWI,QAAA,WAAW,EAAEC,cAXjB;AAYI,QAAA,WAAW,EAAEC,cAZjB;AAaI,QAAA,KAAK,EAAEC,QAbX;AAcI,QAAA,WAAW,EAAExE,WAdjB;AAeI,QAAA,YAAY,EAAEyE;AAflB;AADJ,OAAO,MAAP,CADJ;AAqBH;;AAED,MAAIb,MAAM,CAACmE,QAAP,CAAgB,SAAhB,CAAJ,EAAgC;AAC5BH,IAAAA,SAAS,CAAC9C,OAAV,GACIxI,eAAC0L,cAAD;AAAA,gBACKxB,YAAY,CAACzK,GAAb,CAAiB,UAAC2K,MAAD,EAASnL,CAAT;AAAA,eACde,eAAC2L,oBAAD,oCAEQvB,MAFR;AAGI,UAAA,cAAc,EAAEnB,KAHpB;AAII,UAAA,eAAe,EAAEC;AAJrB,YACSjK,CADT,CADc;AAAA,OAAjB;AADL,OAAc,SAAd,CADJ;AAYH;;AAED,SACIe,eAAC4L,eAAD;AACI,IAAA,KAAK,EAAER,UADX;AAEI,IAAA,MAAM,EAAEC,WAFZ;AAGI,IAAA,MAAM,EAAET,MAHZ;AAII,IAAA,IAAI,EAAEnC,IAJV;AAKI,IAAA,SAAS,EAAEqC,SALf;AAMI,IAAA,cAAc,EAAEC,cANpB;AAOI,IAAA,eAAe,EAAEC,eAPrB;AAAA,cASK1D,MAAM,CAAC7H,GAAP,CAAW,UAACoM,KAAD,EAAQ5M,CAAR,EAAc;AAAA;;AACtB,UAAI,OAAO4M,KAAP,KAAiB,UAArB,EAAiC;AAC7B,eAAO7L,eAAC0L,cAAD;AAAA,oBAAmBjK,mBAAa,CAACoK,KAAD,EAAQ7B,gBAAR;AAAhC,WAAe/K,CAAf,CAAP;AACH;;AAED,iCAAOqM,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAGO,KAAH,CAAhB,+DAA6B,IAA7B;AACH,KANA;AATL,IADJ;AAmBH,CA9LD;;IAgMaC,KAAK,GAAG,SAARA,KAAQ;AAAA,kCACjBxD,aADiB;AAAA,MACjBA,aADiB,oCACDjB,eAAe,CAACiB,aADf;AAAA,4BAEjBlJ,OAFiB;AAAA,MAEjBA,OAFiB,8BAEPiI,eAAe,CAACjI,OAFT;AAAA,iCAGjBsJ,YAHiB;AAAA,MAGjBA,YAHiB,mCAGFrB,eAAe,CAACqB,YAHd;AAAA,MAIjBpK,KAJiB,SAIjBA,KAJiB;AAAA,MAKjByN,aALiB,SAKjBA,aALiB;AAAA,MAMdC,UANc;;AAAA,SAQjBhM,eAACiM,cAAD;AAEQ7M,IAAAA,OAAO,EAAPA,OAFR;AAGQkJ,IAAAA,aAAa,EAAbA,aAHR;AAIQI,IAAAA,YAAY,EAAZA,YAJR;AAKQqD,IAAAA,aAAa,EAAbA,aALR;AAMQzN,IAAAA,KAAK,EAALA,KANR;AAAA,cASI0B,eAAC,UAAD;AAAe,MAAA,aAAa,EAAEsI;AAA9B,OAAiD0D,UAAjD;AATJ,IARiB;AAAA;;IC5MRE,eAAe,GAAG,SAAlBA,eAAkB,CAC3BvJ,KAD2B;AAAA,SAG3B3C,eAACmM,sBAAD;AAAA,cACK;AAAA,UAAGlD,KAAH,QAAGA,KAAH;AAAA,UAAUC,MAAV,QAAUA,MAAV;AAAA,aAAuBlJ,eAAC,KAAD;AAAU,QAAA,KAAK,EAAEiJ,KAAjB;AAAwB,QAAA,MAAM,EAAEC;AAAhC,SAA4CvG,KAA5C,EAAvB;AAAA;AADL,IAH2B;AAAA;;;;;;;"}