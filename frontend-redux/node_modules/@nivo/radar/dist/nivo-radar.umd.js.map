{"version":3,"file":"nivo-radar.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/RadarLayer.tsx","../src/RadarGridLabels.tsx","../src/RadarGridLevels.tsx","../src/RadarGrid.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/RadarSlice.tsx","../src/RadarSlices.tsx","../src/RadarDots.tsx","../src/RadarGridLabel.tsx","../src/RadarSliceTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/hooks.ts","../src/Radar.tsx","../src/ResponsiveRadar.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { lineRadial, CurveFactory } from 'd3-shape'\nimport { ScaleLinear } from 'd3-scale'\nimport { useMotionConfig, useTheme, useAnimatedPath } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { RadarCommonProps } from './types'\n\ninterface RadarLayerProps<D extends Record<string, unknown>> {\n    data: D[]\n    item: string\n    colorByKey: Record<string | number, string>\n    radiusScale: ScaleLinear<number, number>\n    angleStep: number\n    curveFactory: CurveFactory\n    borderWidth: RadarCommonProps<D>['borderWidth']\n    borderColor: RadarCommonProps<D>['borderColor']\n    fillOpacity: RadarCommonProps<D>['fillOpacity']\n    blendMode: RadarCommonProps<D>['blendMode']\n}\n\nexport const RadarLayer = <D extends Record<string, unknown>>({\n    data,\n    item: key,\n    colorByKey,\n    radiusScale,\n    angleStep,\n    curveFactory,\n    borderWidth,\n    borderColor,\n    fillOpacity,\n    blendMode,\n}: RadarLayerProps<D>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const lineGenerator = useMemo(() => {\n        return lineRadial<number>()\n            .radius(d => radiusScale(d))\n            .angle((_, i) => i * angleStep)\n            .curve(curveFactory)\n    }, [radiusScale, angleStep, curveFactory])\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(lineGenerator(data.map(d => d[key] as number)) as string)\n    const animatedProps = useSpring<{ fill: string; stroke: string }>({\n        fill: colorByKey[key],\n        stroke: getBorderColor({ key, color: colorByKey[key] }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            key={key}\n            d={animatedPath}\n            fill={animatedProps.fill}\n            fillOpacity={fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={borderWidth}\n            style={{ mixBlendMode: blendMode }}\n        />\n    )\n}\n","import { createElement } from 'react'\nimport { useSprings } from '@react-spring/web'\nimport { useMotionConfig, positionFromAngle, radiansToDegrees } from '@nivo/core'\nimport { GridLabelComponent } from './types'\n\nconst textAnchorFromAngle = (_angle: number) => {\n    const angle = radiansToDegrees(_angle) + 90\n\n    if (angle <= 10 || angle >= 350 || (angle >= 170 && angle <= 190)) return 'middle' as const\n    if (angle > 180) return 'end' as const\n    return 'start' as const\n}\n\ninterface RadarGridLabelsProps {\n    radius: number\n    angles: number[]\n    indices: string[]\n    label: GridLabelComponent\n    labelOffset: number\n}\n\nexport const RadarGridLabels = ({\n    radius,\n    angles,\n    indices,\n    label: labelComponent,\n    labelOffset,\n}: RadarGridLabelsProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = indices.map((index, i) => {\n        const position = positionFromAngle(angles[i], radius + labelOffset)\n        const textAnchor = textAnchorFromAngle(angles[i])\n\n        return {\n            id: index,\n            angle: radiansToDegrees(angles[i]),\n            anchor: textAnchor,\n            ...position,\n        }\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y})`,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return (\n        <>\n            {springs.map((animatedProps, index) => {\n                const label = labels[index]\n\n                return createElement(labelComponent, {\n                    key: label.id,\n                    id: label.id,\n                    anchor: label.anchor,\n                    angle: label.angle,\n                    x: label.x,\n                    y: label.y,\n                    animated: animatedProps,\n                })\n            })}\n        </>\n    )\n}\n","import { memo, SVGProps, useMemo } from 'react'\nimport { lineRadial, curveLinearClosed } from 'd3-shape'\nimport { animated, useSpring, to } from '@react-spring/web'\nimport { useTheme, useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { RadarCommonProps } from './types'\n\ninterface RadarGridLevelCircularProps {\n    radius: number\n}\n\nconst RadarGridLevelCircular = memo(({ radius }: RadarGridLevelCircularProps) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        radius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            fill=\"none\"\n            r={to(animatedProps.radius, value => Math.max(value, 0))}\n            {...(theme.grid.line as Omit<SVGProps<SVGCircleElement>, 'ref'>)}\n        />\n    )\n})\n\ninterface RadarGridLevelLinearProps {\n    radius: number\n    angleStep: number\n    dataLength: number\n}\n\nconst RadarGridLevelLinear = ({ radius, angleStep, dataLength }: RadarGridLevelLinearProps) => {\n    const theme = useTheme()\n\n    const radarLineGenerator = useMemo(\n        () =>\n            lineRadial<number>()\n                .angle(i => i * angleStep)\n                .radius(radius)\n                .curve(curveLinearClosed),\n        [angleStep, radius]\n    )\n\n    const points = Array.from({ length: dataLength }, (_, i) => i)\n    const animatedPath = useAnimatedPath(radarLineGenerator(points) as string)\n\n    return (\n        <animated.path\n            fill=\"none\"\n            d={animatedPath}\n            {...(theme.grid.line as Omit<SVGProps<SVGPathElement>, 'ref'>)}\n        />\n    )\n}\n\ninterface RadarGridLevelsProps<D extends Record<string, unknown>> {\n    shape: RadarCommonProps<D>['gridShape']\n    radius: number\n    angleStep: number\n    dataLength: number\n}\n\nexport const RadarGridLevels = <D extends Record<string, unknown>>({\n    shape,\n    ...props\n}: RadarGridLevelsProps<D>) => {\n    return shape === 'circular' ? (\n        <RadarGridLevelCircular radius={props.radius} />\n    ) : (\n        <RadarGridLevelLinear {...props} />\n    )\n}\n","import { SVGProps, useMemo } from 'react'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport { RadarGridLabels } from './RadarGridLabels'\nimport { RadarGridLevels } from './RadarGridLevels'\nimport { GridLabelComponent, RadarCommonProps } from './types'\n\ninterface RadarGridProps<D extends Record<string, unknown>> {\n    indices: string[]\n    shape: RadarCommonProps<D>['gridShape']\n    radius: number\n    levels: number\n    angleStep: number\n    label: GridLabelComponent\n    labelOffset: number\n}\n\nexport const RadarGrid = <D extends Record<string, unknown>>({\n    indices,\n    levels,\n    shape,\n    radius,\n    angleStep,\n    label,\n    labelOffset,\n}: RadarGridProps<D>) => {\n    const theme = useTheme()\n    const { radii, angles } = useMemo(() => {\n        return {\n            radii: Array.from({ length: levels })\n                .map((_, i) => (radius / levels) * (i + 1))\n                .reverse(),\n            angles: Array.from({ length: indices.length }, (_, i) => i * angleStep - Math.PI / 2),\n        }\n    }, [indices, levels, radius, angleStep])\n\n    return (\n        <>\n            {angles.map((angle, i) => {\n                const position = positionFromAngle(angle, radius)\n                return (\n                    <line\n                        key={`axis.${i}`}\n                        x1={0}\n                        y1={0}\n                        x2={position.x}\n                        y2={position.y}\n                        {...(theme.grid.line as SVGProps<SVGLineElement>)}\n                    />\n                )\n            })}\n            {radii.map((radius, i) => (\n                <RadarGridLevels<D>\n                    key={`level.${i}`}\n                    shape={shape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    dataLength={indices.length}\n                />\n            ))}\n            <RadarGridLabels\n                radius={radius}\n                angles={angles}\n                indices={indices}\n                labelOffset={labelOffset}\n                label={label}\n            />\n        </>\n    )\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { useMemo, useState, useCallback, createElement } from 'react'\nimport { Arc } from 'd3-shape'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { RadarCommonProps, RadarDataProps, RadarSliceTooltipDatum } from './types'\n\ninterface RadarSliceProps<D extends Record<string, unknown>> {\n    datum: D\n    keys: RadarDataProps<D>['keys']\n    index: string | number\n    formatValue: (value: number, context: string) => string\n    colorByKey: Record<string, string>\n    startAngle: number\n    endAngle: number\n    radius: number\n    arcGenerator: Arc<void, { startAngle: number; endAngle: number }>\n    tooltip: RadarCommonProps<D>['sliceTooltip']\n}\n\nexport const RadarSlice = <D extends Record<string, unknown>>({\n    datum,\n    keys,\n    index,\n    formatValue,\n    colorByKey,\n    radius,\n    startAngle,\n    endAngle,\n    arcGenerator,\n    tooltip,\n}: RadarSliceProps<D>) => {\n    const [isHover, setIsHover] = useState(false)\n    const theme = useTheme()\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipData = useMemo(() => {\n        const data: RadarSliceTooltipDatum[] = keys.map(key => ({\n            color: colorByKey[key],\n            id: key,\n            value: datum[key] as number,\n            formattedValue: formatValue(datum[key] as number, key),\n        }))\n        data.sort((a, b) => a.value - b.value)\n        data.reverse()\n\n        return data\n    }, [datum, keys, formatValue, colorByKey])\n\n    const showItemTooltip = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(\n                createElement(tooltip, {\n                    index,\n                    data: tooltipData,\n                }),\n                event\n            )\n        },\n        [showTooltipFromEvent, tooltip, index, tooltipData]\n    )\n\n    const hideItemTooltip = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [hideTooltip, setIsHover])\n\n    const { path, tipX, tipY } = useMemo(() => {\n        const position = positionFromAngle(\n            startAngle + (endAngle - startAngle) * 0.5 - Math.PI / 2,\n            radius\n        )\n\n        return {\n            path: arcGenerator({ startAngle, endAngle }) as string,\n            tipX: position.x,\n            tipY: position.y,\n        }\n    }, [startAngle, endAngle, radius, arcGenerator])\n\n    return (\n        <>\n            {isHover && <line x1={0} y1={0} x2={tipX} y2={tipY} style={theme.crosshair.line} />}\n            <path\n                d={path}\n                fill=\"#F00\"\n                fillOpacity={0}\n                onMouseEnter={showItemTooltip}\n                onMouseMove={showItemTooltip}\n                onMouseLeave={hideItemTooltip}\n            />\n        </>\n    )\n}\n","import { arc as d3Arc } from 'd3-shape'\nimport { RadarSlice } from './RadarSlice'\nimport { RadarColorMapping, RadarCommonProps, RadarDataProps } from './types'\n\ninterface RadarSlicesProps<D extends Record<string, unknown>> {\n    data: RadarDataProps<D>['data']\n    keys: RadarDataProps<D>['keys']\n    getIndex: (d: D) => string | number\n    formatValue: (value: number, context: string) => string\n    colorByKey: RadarColorMapping\n    radius: number\n    angleStep: number\n    tooltip: RadarCommonProps<D>['sliceTooltip']\n}\n\nexport const RadarSlices = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    getIndex,\n    formatValue,\n    colorByKey,\n    radius,\n    angleStep,\n    tooltip,\n}: RadarSlicesProps<D>) => {\n    const arc = d3Arc<{ startAngle: number; endAngle: number }>().outerRadius(radius).innerRadius(0)\n\n    const halfAngleStep = angleStep * 0.5\n    let rootStartAngle = -halfAngleStep\n\n    return (\n        <>\n            {data.map(d => {\n                const index = getIndex(d)\n                const startAngle = rootStartAngle\n                const endAngle = startAngle + angleStep\n\n                rootStartAngle += angleStep\n\n                return (\n                    <RadarSlice\n                        key={index}\n                        datum={d}\n                        keys={keys}\n                        index={index}\n                        formatValue={formatValue}\n                        colorByKey={colorByKey}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        radius={radius}\n                        arcGenerator={arc}\n                        tooltip={tooltip}\n                    />\n                )\n            })}\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { ScaleLinear } from 'd3-scale'\nimport { useTheme, positionFromAngle, DotsItem, usePropertyAccessor } from '@nivo/core'\nimport { getInheritedColorGenerator } from '@nivo/colors'\nimport { RadarCommonProps, RadarDataProps, PointProps, PointData, RadarColorMapping } from './types'\n\ninterface RadarDotsProps<D extends Record<string, unknown>> {\n    data: RadarDataProps<D>['data']\n    keys: RadarDataProps<D>['keys']\n    radiusScale: ScaleLinear<number, number>\n    getIndex: (d: D) => string\n    colorByKey: RadarColorMapping\n    angleStep: number\n    symbol?: RadarCommonProps<D>['dotSymbol']\n    size: number\n    color: RadarCommonProps<D>['dotColor']\n    borderWidth: number\n    borderColor: RadarCommonProps<D>['dotBorderColor']\n    enableLabel: boolean\n    label: RadarCommonProps<D>['dotLabel']\n    formatValue: (value: number, context: string) => string\n    labelYOffset: number\n}\n\nexport const RadarDots = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    getIndex,\n    colorByKey,\n    radiusScale,\n    angleStep,\n    symbol,\n    size = 6,\n    color = { from: 'color' },\n    borderWidth = 0,\n    borderColor = { from: 'color' },\n    enableLabel = false,\n    label = 'value',\n    formatValue,\n    labelYOffset,\n}: RadarDotsProps<D>) => {\n    const theme = useTheme()\n    const fillColor = getInheritedColorGenerator(color, theme)\n    const strokeColor = getInheritedColorGenerator(borderColor, theme)\n    const getLabel = usePropertyAccessor<PointData, string | number>(label)\n\n    const points: PointProps[] = useMemo(\n        () =>\n            data.reduce((acc, datum, i) => {\n                const index = getIndex(datum)\n                keys.forEach(key => {\n                    const value = datum[key] as number\n\n                    const pointData: PointData = {\n                        index,\n                        key,\n                        value,\n                        formattedValue: formatValue(value, key),\n                        color: colorByKey[key],\n                    }\n\n                    acc.push({\n                        key: `${key}.${index}`,\n                        label: enableLabel ? getLabel(pointData) : undefined,\n                        style: {\n                            fill: fillColor(pointData),\n                            stroke: strokeColor(pointData),\n                            ...positionFromAngle(\n                                angleStep * i - Math.PI / 2,\n                                radiusScale(datum[key] as number)\n                            ),\n                        },\n                        data: pointData,\n                    })\n                })\n\n                return acc\n            }, [] as PointProps[]),\n        [\n            data,\n            keys,\n            getIndex,\n            colorByKey,\n            enableLabel,\n            getLabel,\n            formatValue,\n            fillColor,\n            strokeColor,\n            angleStep,\n            radiusScale,\n        ]\n    )\n\n    return (\n        <>\n            {points.map(point => (\n                <DotsItem\n                    key={point.key}\n                    x={point.style.x}\n                    y={point.style.y}\n                    symbol={symbol}\n                    size={size}\n                    color={point.style.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.style.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    datum={point.data}\n                />\n            ))}\n        </>\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { GridLabelProps } from './types'\n\nexport const RadarGridLabel = ({ id, anchor, animated: animatedProps }: GridLabelProps) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <text style={theme.axis.ticks.text} dominantBaseline=\"central\" textAnchor={anchor}>\n                {id}\n            </text>\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { RadarSliceTooltipProps } from './types'\n\nexport const RadarSliceTooltip = ({ index, data }: RadarSliceTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            data.map(datum => [\n                <Chip key={datum.id} color={datum.color} />,\n                datum.id,\n                datum.formattedValue,\n            ]),\n        [data]\n    )\n\n    return <TableTooltip title={<strong>{index}</strong>} rows={rows} />\n}\n","import { RadarGridLabel } from './RadarGridLabel'\nimport { RadarSliceTooltip } from './RadarSliceTooltip'\nimport { RadarLayerId } from './types'\n\nexport const svgDefaultProps = {\n    layers: ['grid', 'layers', 'slices', 'dots', 'legends'] as RadarLayerId[],\n\n    maxValue: 'auto' as const,\n\n    curve: 'linearClosed' as const,\n\n    borderWidth: 2,\n    borderColor: { from: 'color' },\n\n    gridLevels: 5,\n    gridShape: 'circular' as const,\n    gridLabelOffset: 16,\n    gridLabel: RadarGridLabel,\n\n    enableDots: true,\n    dotSize: 6,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 0,\n    dotBorderColor: { from: 'color' },\n    enableDotLabel: false,\n    dotLabel: 'formattedValue',\n    dotLabelYOffset: -12,\n\n    colors: { scheme: 'nivo' as const },\n    fillOpacity: 0.25,\n    blendMode: 'normal' as const,\n\n    isInteractive: true,\n    sliceTooltip: RadarSliceTooltip,\n\n    legends: [],\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle' as const,\n}\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { useCurveInterpolation, usePropertyAccessor, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { svgDefaultProps } from './props'\nimport {\n    RadarColorMapping,\n    RadarCommonProps,\n    RadarDataProps,\n    RadarCustomLayerProps,\n    BoundLegendProps,\n} from './types'\n\nexport const useRadar = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    indexBy,\n    maxValue,\n    valueFormat,\n    curve,\n    width,\n    height,\n    colors = svgDefaultProps.colors,\n    legends,\n}: {\n    data: RadarDataProps<D>['data']\n    keys: RadarDataProps<D>['keys']\n    indexBy: RadarDataProps<D>['indexBy']\n    maxValue: RadarCommonProps<D>['maxValue']\n    valueFormat?: RadarCommonProps<D>['valueFormat']\n    curve: RadarCommonProps<D>['curve']\n    width: number\n    height: number\n    colors: RadarCommonProps<D>['colors']\n    legends: RadarCommonProps<D>['legends']\n}) => {\n    const getIndex = usePropertyAccessor<D, string>(indexBy)\n    const indices = useMemo(() => data.map(getIndex), [data, getIndex])\n    const formatValue = useValueFormatter<number, string>(valueFormat)\n\n    const getColor = useOrdinalColorScale<{ key: string; index: number }>(colors, 'key')\n    const colorByKey: RadarColorMapping = useMemo(\n        () =>\n            keys.reduce<RadarColorMapping>((mapping, key, index) => {\n                mapping[key] = getColor({ key, index })\n                return mapping\n            }, {}),\n        [keys, getColor]\n    )\n\n    const { radius, radiusScale, centerX, centerY, angleStep } = useMemo(() => {\n        const allValues: number[] = data.reduce(\n            (acc: number[], d) => [...acc, ...keys.map(key => d[key] as number)],\n            [] as number[]\n        )\n        const computedMaxValue = maxValue !== 'auto' ? maxValue : Math.max(...allValues)\n\n        const radius = Math.min(width, height) / 2\n        const radiusScale = scaleLinear<number, number>()\n            .range([0, radius])\n            .domain([0, computedMaxValue])\n\n        return {\n            radius,\n            radiusScale,\n            centerX: width / 2,\n            centerY: height / 2,\n            angleStep: (Math.PI * 2) / data.length,\n        }\n    }, [keys, data, maxValue, width, height])\n\n    const curveFactory = useCurveInterpolation(curve)\n\n    const customLayerProps: RadarCustomLayerProps<D> = useMemo(\n        () => ({\n            data,\n            keys,\n            indices,\n            colorByKey,\n            centerX,\n            centerY,\n            radiusScale,\n            angleStep,\n        }),\n        [data, keys, indices, colorByKey, centerX, centerY, radiusScale, angleStep]\n    )\n\n    const legendData = useMemo(\n        () => keys.map(key => ({ id: key, label: key, color: colorByKey[key] })),\n        [keys, colorByKey]\n    )\n\n    const boundLegends: BoundLegendProps[] = useMemo(\n        () =>\n            legends.map(({ data: customData, ...legend }) => {\n                const boundData = customData?.map(cd => {\n                    const findData = legendData.find(ld => ld.id === cd.id) || {}\n                    return { ...findData, ...cd }\n                })\n                return { ...legend, data: boundData || legendData }\n            }),\n        [legends, legendData]\n    )\n\n    return {\n        getIndex,\n        indices,\n        formatValue,\n        colorByKey,\n        radius,\n        radiusScale,\n        centerX,\n        centerY,\n        angleStep,\n        curveFactory,\n        legendData,\n        boundLegends,\n        customLayerProps,\n    }\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport { Container, useDimensions, SvgWrapper } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { RadarLayer } from './RadarLayer'\nimport { RadarGrid } from './RadarGrid'\nimport { RadarSlices } from './RadarSlices'\nimport { RadarDots } from './RadarDots'\nimport { svgDefaultProps } from './props'\nimport { RadarLayerId, RadarSvgProps } from './types'\nimport { useRadar } from './hooks'\n\ntype InnerRadarProps<D extends Record<string, unknown>> = Omit<\n    RadarSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerRadar = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    indexBy,\n    layers = svgDefaultProps.layers,\n    maxValue = svgDefaultProps.maxValue,\n    valueFormat,\n    curve = svgDefaultProps.curve,\n    margin: partialMargin,\n    width,\n    height,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n    gridLevels = svgDefaultProps.gridLevels,\n    gridShape = svgDefaultProps.gridShape,\n    gridLabel = svgDefaultProps.gridLabel,\n    gridLabelOffset = svgDefaultProps.gridLabelOffset,\n    enableDots = svgDefaultProps.enableDots,\n    dotSymbol,\n    dotSize = svgDefaultProps.dotSize,\n    dotColor = svgDefaultProps.dotColor,\n    dotBorderWidth = svgDefaultProps.dotBorderWidth,\n    dotBorderColor = svgDefaultProps.dotBorderColor,\n    enableDotLabel = svgDefaultProps.enableDotLabel,\n    dotLabel = svgDefaultProps.dotLabel,\n    dotLabelYOffset = svgDefaultProps.dotLabelYOffset,\n    colors = svgDefaultProps.colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    blendMode = svgDefaultProps.blendMode,\n    isInteractive = svgDefaultProps.isInteractive,\n    sliceTooltip = svgDefaultProps.sliceTooltip,\n    legends = svgDefaultProps.legends,\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerRadarProps<D>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        getIndex,\n        indices,\n        formatValue,\n        colorByKey,\n        radius,\n        radiusScale,\n        centerX,\n        centerY,\n        angleStep,\n        curveFactory,\n        boundLegends,\n        customLayerProps,\n    } = useRadar<D>({\n        data,\n        keys,\n        indexBy,\n        maxValue,\n        valueFormat,\n        curve,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        legends,\n    })\n\n    const layerById: Record<RadarLayerId, ReactNode> = {\n        grid: null,\n        layers: null,\n        slices: null,\n        dots: null,\n        legends: null,\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <g key=\"grid\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarGrid<D>\n                    levels={gridLevels}\n                    shape={gridShape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    indices={indices}\n                    label={gridLabel}\n                    labelOffset={gridLabelOffset}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('layers')) {\n        layerById.layers = (\n            <g key=\"layers\" transform={`translate(${centerX}, ${centerY})`}>\n                {keys.map(key => (\n                    <RadarLayer<D>\n                        key={key}\n                        data={data}\n                        item={key}\n                        colorByKey={colorByKey}\n                        radiusScale={radiusScale}\n                        angleStep={angleStep}\n                        curveFactory={curveFactory}\n                        borderWidth={borderWidth}\n                        borderColor={borderColor}\n                        fillOpacity={fillOpacity}\n                        blendMode={blendMode}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    if (layers.includes('slices') && isInteractive) {\n        layerById.slices = (\n            <g key=\"slices\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarSlices<D>\n                    data={data}\n                    keys={keys}\n                    getIndex={getIndex}\n                    formatValue={formatValue}\n                    colorByKey={colorByKey}\n                    radius={radius}\n                    angleStep={angleStep}\n                    tooltip={sliceTooltip}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <g key=\"dots\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarDots<D>\n                    data={data}\n                    keys={keys}\n                    getIndex={getIndex}\n                    radiusScale={radiusScale}\n                    angleStep={angleStep}\n                    symbol={dotSymbol}\n                    size={dotSize}\n                    colorByKey={colorByKey}\n                    color={dotColor}\n                    borderWidth={dotBorderWidth}\n                    borderColor={dotBorderColor}\n                    enableLabel={enableDotLabel}\n                    label={dotLabel}\n                    formatValue={formatValue}\n                    labelYOffset={dotLabelYOffset}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {boundLegends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Radar = <D extends Record<string, unknown>>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: RadarSvgProps<D>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerRadar<D> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { RadarSvgProps } from './types'\nimport { Radar } from './Radar'\n\nexport const ResponsiveRadar = <D extends Record<string, unknown>>(\n    props: Omit<RadarSvgProps<D>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Radar<D> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","defineProperty","RadarLayer","data","key","item","colorByKey","radiusScale","angleStep","curveFactory","borderWidth","borderColor","fillOpacity","blendMode","theme","useTheme","getBorderColor","useInheritedColor","lineGenerator","useMemo","lineRadial","radius","d","angle","_","i","curve","useMotionConfig","animate","springConfig","config","animatedPath","useAnimatedPath","map","animatedProps","useSpring","fill","stroke","color","immediate","_jsx","animated","mixBlendMode","textAnchorFromAngle","_angle","radiansToDegrees","RadarGridLabels","angles","indices","labelComponent","label","labelOffset","labels","index","position","positionFromAngle","textAnchor","id","anchor","springs","useSprings","length","transform","x","y","createElement","RadarGridLevelCircular","memo","to","value","Math","max","grid","line","RadarGridLevelLinear","dataLength","radarLineGenerator","curveLinearClosed","points","Array","from","RadarGridLevels","shape","props","RadarGrid","levels","radii","reverse","PI","_jsxs","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","RadarSlice","datum","keys","formatValue","startAngle","endAngle","arcGenerator","tooltip","useState","isHover","setIsHover","useTooltip","showTooltipFromEvent","hideTooltip","tooltipData","formattedValue","sort","a","b","showItemTooltip","useCallback","event","hideItemTooltip","path","tipX","tipY","crosshair","RadarSlices","getIndex","arc","d3Arc","outerRadius","innerRadius","halfAngleStep","rootStartAngle","RadarDots","symbol","size","enableLabel","labelYOffset","fillColor","getInheritedColorGenerator","strokeColor","getLabel","usePropertyAccessor","reduce","acc","forEach","pointData","push","undefined","style","point","DotsItem","RadarGridLabel","axis","ticks","text","RadarSliceTooltip","rows","Chip","TableTooltip","svgDefaultProps","layers","maxValue","gridLevels","gridShape","gridLabelOffset","gridLabel","enableDots","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","colors","scheme","isInteractive","sliceTooltip","legends","role","motionConfig","arrayWithoutHoles","iterableToArray","nonIterableSpread","useRadar","indexBy","valueFormat","width","height","useValueFormatter","getColor","useOrdinalColorScale","mapping","allValues","computedMaxValue","min","scaleLinear","range","domain","centerX","centerY","useCurveInterpolation","customLayerProps","legendData","boundLegends","customData","legend","boundData","cd","findData","find","ld","InnerRadar","partialMargin","margin","dotSymbol","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","layerById","slices","dots","includes","Fragment","BoxLegendSvg","SvgWrapper","layer","Radar","renderWrapper","otherProps","Container","ResponsiveRadar","ResponsiveWrapper"],"mappings":"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"}